{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Desktop\\\\sem5\\\\Project\\\\New\\\\new\\\\src\\\\components\\\\dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Link, Route, Routes, useNavigate } from \"react-router-dom\";\nimport \"./dashboard.css\";\nimport Achievements from \"./achievements/achievements\";\nimport LogoutButton from \"./logout/logout\";\nimport { useAuth } from \"./AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const {\n    token,\n    email\n  } = useAuth();\n  const [userInfo, setUserInfo] = useState(null);\n  const [currentSemester, setCurrentSemester] = useState(null);\n  const [profilePhoto, setProfilePhoto] = useState(null); // State for profile photo\n  const [selectedPhoto, setSelectedPhoto] = useState(null);\n  const [isEditingProfilePhoto, setIsEditingProfilePhoto] = useState(false);\n  const [photoUploaded, setPhotoUploaded] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Make an API request to fetch user data\n    const fetchUserInfo = async () => {\n      try {\n        if (token && email) {\n          const response = await fetch(`http://localhost:9002/info?email=${email}`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          if (response.status === 200) {\n            const userData = await response.json();\n            setUserInfo(userData);\n\n            // Calculate current semester based on a fixed start date\n            const startDate = new Date(userData.startDate);\n            const currentDate = new Date();\n\n            // Calculate the difference in months\n            const diffMonths = (currentDate.getFullYear() - startDate.getFullYear()) * 12 + (currentDate.getMonth() - startDate.getMonth());\n            const currentSemesterNumber = Math.floor(diffMonths / 5) + 1;\n            setCurrentSemester(currentSemesterNumber);\n\n            // Set profile photo URL\n            setProfilePhoto(userData.photo);\n          } else {\n            console.error('Failed to fetch user information');\n          }\n        }\n      } catch (error) {\n        console.error('Fetch user info error:', error);\n      }\n    };\n    if (token) {\n      fetchUserInfo();\n    }\n  }, [token, email, navigate]);\n  const formatStartDate = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('en-US');\n  };\n\n  // Function to handle file input change for profile photo\n  const handleProfilePhotoChange = e => {\n    const selectedPhoto = e.target.files[0];\n    setSelectedPhoto(selectedPhoto); // Store the selected photo\n    setPhotoUploaded(true); // Set photoUploaded to true\n  };\n\n  // Function to save the edited profile photo\n  const saveProfilePhoto = async () => {\n    try {\n      if (selectedPhoto) {\n        // Create a form data to send the photo to the server\n        const formData = new FormData();\n        formData.append('photo', selectedPhoto);\n\n        // Make an API request to save the photo\n        const response = await fetch('http://localhost:9002/editProfilePhoto', {\n          method: 'POST',\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          body: formData\n        });\n        if (response.status === 200) {\n          setIsEditingProfilePhoto(false);\n        } else {\n          console.error('Failed to save profile photo');\n        }\n      }\n    } catch (error) {\n      console.error('Save profile photo error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        id: \"sidebar\",\n        className: \"col-md-3 col-lg-2 d-md-block bg-light sidebar\",\n        children: [\"//           \", /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"position-sticky\",\n          children: [\"//             \", /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"nav flex-column\",\n            children: [\"//               \", /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: [\"//                 \", /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/dashboard/ChatSystem\",\n                className: \"nav-link\",\n                children: \"//                   Chat System //                 \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 20\n              }, this), \"//               \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 18\n            }, this), \"//               \", /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: [\"//                 \", /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/dashboard/achievements\",\n                className: \"nav-link\",\n                children: \"//                   Track Achievements //                 \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 20\n              }, this), \"//               \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 18\n            }, this), \"//               \", /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: [\"//                 \", /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/dashboard/progressreport\",\n                className: \"nav-link\",\n                children: \"//                   View Progress Report //                 \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 20\n              }, this), \"//               \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 18\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 16\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"col-md-9 ms-sm-auto col-lg-10 px-md-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"h2\",\n            children: \"Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LogoutButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), userInfo ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: photoUploaded ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: isEditingProfilePhoto ? /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: URL.createObjectURL(selectedPhoto),\n                  alt: \"User\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: saveProfilePhoto,\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: URL.createObjectURL(selectedPhoto),\n                  alt: \"User\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  onClick: () => setIsEditingProfilePhoto(true),\n                  children: \"Edit Photo\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                accept: \"image/*\",\n                onChange: handleProfilePhotoChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Name: \", userInfo.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Email: \", userInfo.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Student Id: \", userInfo.studentId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 15\n          }, this), userInfo.startDate && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Start Date: \", formatStartDate(userInfo.startDate)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 17\n          }, this), currentSemester !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Current Semester: \", currentSemester]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading user data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/dashboard/achievements\",\n            element: /*#__PURE__*/_jsxDEV(Achievements, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 60\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"BQVw5Ii4O7QORSoWlHsa/VnuWWk=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\n\n// import React, { useState, useEffect } from \"react\";\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// import { Link, Route, Routes, useNavigate } from \"react-router-dom\";\n// import \"./dashboard.css\";\n// import Achievements from \"./achievements/achievements\";\n// import LogoutButton from \"./logout/logout\";\n// import { useAuth } from \"./AuthContext\";\n\n// const Dashboard = () => {\n//   const { token, email } = useAuth();\n//   const [userInfo, setUserInfo] = useState(null);\n//   const [currentSemester, setCurrentSemester] = useState(null);\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     // Make an API request to fetch user data\n//     const fetchUserInfo = async () => {\n//       try {\n//         if (token && email) {\n//           const response = await fetch(`http://localhost:9002/info?email=${email}`, {\n//             headers: {\n//               Authorization: `Bearer ${token}`,\n//             },\n//           });\n//           if (response.status === 200) {\n//             const userData = await response.json();\n//             setUserInfo(userData);\n\n//             // Calculate current semester based on a fixed start date\n//             const startDate = new Date(userData.startDate);\n//             const currentDate = new Date();\n\n//             // Calculate the difference in months\n//             const diffMonths = (currentDate.getFullYear() - startDate.getFullYear()) * 12 + (currentDate.getMonth() - startDate.getMonth());\n//             const currentSemesterNumber = Math.floor(diffMonths / 5) + 1;\n//             setCurrentSemester(currentSemesterNumber);\n\n//             // Navigate to the same route to reload the page\n//             navigate('/dashboard', { replace: true });\n//           } else {\n//             console.error('Failed to fetch user information');\n//           }\n//         }\n//       } catch (error) {\n//         console.error('Fetch user info error:', error);\n//       }\n//     };\n\n//     if (token) {\n//       fetchUserInfo();\n//     }\n//   }, [token, email, navigate]);\n\n//   const formatStartDate = (dateString) => {\n//     const date = new Date(dateString);\n//     return date.toLocaleDateString('en-US');\n//   };\n\n//   return (\n//     <div className=\"container-fluid\">\n//       <div className=\"row\">\n//         <nav id=\"sidebar\" className=\"col-md-3 col-lg-2 d-md-block bg-light sidebar\">\n//           <div className=\"position-sticky\">\n//             <ul className=\"nav flex-column\">\n//               <li className=\"nav-item\">\n//                 <Link to=\"/dashboard/ChatSystem\" className=\"nav-link\">\n//                   Chat System\n//                 </Link>\n//               </li>\n//               <li className=\"nav-item\">\n//                 <Link to=\"/dashboard/achievements\" className=\"nav-link\">\n//                   Track Achievements\n//                 </Link>\n//               </li>\n//               <li className=\"nav-item\">\n//                 <Link to=\"/dashboard/progressreport\" className=\"nav-link\">\n//                   View Progress Report\n//                 </Link>\n//               </li>\n//             </ul>\n//           </div>\n//         </nav>\n\n//         <main className=\"col-md-9 ms-sm-auto col-lg-10 px-md-4\">\n//           <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n//             <h1 className=\"h2\">Dashboard</h1>\n//             <LogoutButton />\n//           </div>\n\n//           {/* Display user data */}\n//           {userInfo ? (\n//             <div>\n//               <img src={userInfo.photo} alt=\"User\" />\n//               <p>Name: {userInfo.name}</p>\n//               <p>Email: {userInfo.email}</p>\n//               <p>Student Id: {userInfo.studentId}</p>\n//               {userInfo.startDate && (\n//                 <p>Start Date: {formatStartDate(userInfo.startDate)}</p>\n//               )}\n//               {currentSemester !== null && (\n//                 <p>Current Semester: {currentSemester}</p>\n//               )}\n//             </div>\n//           ) : (\n//             <p>Loading user data...</p>\n//           )}\n\n//           <Routes>\n//             <Route path=\"/dashboard/achievements\" element={<Achievements />} />\n//           </Routes>\n//         </main>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Link","Route","Routes","useNavigate","Achievements","LogoutButton","useAuth","jsxDEV","_jsxDEV","Dashboard","_s","token","email","userInfo","setUserInfo","currentSemester","setCurrentSemester","profilePhoto","setProfilePhoto","selectedPhoto","setSelectedPhoto","isEditingProfilePhoto","setIsEditingProfilePhoto","photoUploaded","setPhotoUploaded","navigate","fetchUserInfo","response","fetch","headers","Authorization","status","userData","json","startDate","Date","currentDate","diffMonths","getFullYear","getMonth","currentSemesterNumber","Math","floor","photo","console","error","formatStartDate","dateString","date","toLocaleDateString","handleProfilePhotoChange","e","target","files","saveProfilePhoto","formData","FormData","append","method","body","className","children","id","to","fileName","_jsxFileName","lineNumber","columnNumber","src","URL","createObjectURL","alt","onClick","type","accept","onChange","name","studentId","path","element","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Desktop/sem5/Project/New/new/src/components/dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Link, Route, Routes, useNavigate } from \"react-router-dom\";\r\nimport \"./dashboard.css\";\r\nimport Achievements from \"./achievements/achievements\";\r\nimport LogoutButton from \"./logout/logout\";\r\nimport { useAuth } from \"./AuthContext\";\r\n\r\nconst Dashboard = () => {\r\n  const { token, email } = useAuth();\r\n  const [userInfo, setUserInfo] = useState(null);\r\n  const [currentSemester, setCurrentSemester] = useState(null);\r\n  const [profilePhoto, setProfilePhoto] = useState(null); // State for profile photo\r\n  const [selectedPhoto, setSelectedPhoto] = useState(null);\r\n  const [isEditingProfilePhoto, setIsEditingProfilePhoto] = useState(false);\r\n  const [photoUploaded, setPhotoUploaded] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Make an API request to fetch user data\r\n    const fetchUserInfo = async () => {\r\n      try {\r\n        if (token && email) {\r\n          const response = await fetch(`http://localhost:9002/info?email=${email}`, {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          });\r\n          if (response.status === 200) {\r\n            const userData = await response.json();\r\n            setUserInfo(userData);\r\n\r\n            // Calculate current semester based on a fixed start date\r\n            const startDate = new Date(userData.startDate);\r\n            const currentDate = new Date();\r\n\r\n            // Calculate the difference in months\r\n            const diffMonths = (currentDate.getFullYear() - startDate.getFullYear()) * 12 + (currentDate.getMonth() - startDate.getMonth());\r\n            const currentSemesterNumber = Math.floor(diffMonths / 5) + 1;\r\n            setCurrentSemester(currentSemesterNumber);\r\n\r\n            // Set profile photo URL\r\n            setProfilePhoto(userData.photo);\r\n          } else {\r\n            console.error('Failed to fetch user information');\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Fetch user info error:', error);\r\n      }\r\n    };\r\n\r\n    if (token) {\r\n      fetchUserInfo();\r\n    }\r\n  }, [token, email, navigate]);\r\n\r\n  const formatStartDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString('en-US');\r\n  };\r\n\r\n  // Function to handle file input change for profile photo\r\n  const handleProfilePhotoChange = (e) => {\r\n    const selectedPhoto = e.target.files[0];\r\n    setSelectedPhoto(selectedPhoto); // Store the selected photo\r\n    setPhotoUploaded(true); // Set photoUploaded to true\r\n  };\r\n   \r\n  \r\n\r\n  // Function to save the edited profile photo\r\n  const saveProfilePhoto = async () => {\r\n    try {\r\n      if (selectedPhoto){\r\n      // Create a form data to send the photo to the server\r\n      const formData = new FormData();\r\n      formData.append('photo', selectedPhoto);\r\n\r\n      // Make an API request to save the photo\r\n      const response = await fetch('http://localhost:9002/editProfilePhoto', {\r\n        method: 'POST',\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: formData,\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        setIsEditingProfilePhoto(false);\r\n      } else {\r\n        console.error('Failed to save profile photo');\r\n      }\r\n    }\r\n    } catch (error) {\r\n      console.error('Save profile photo error:', error);\r\n    }\r\n  };\r\n\r\n \r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n      <nav id=\"sidebar\" className=\"col-md-3 col-lg-2 d-md-block bg-light sidebar\">\r\n//           <div className=\"position-sticky\">\r\n//             <ul className=\"nav flex-column\">\r\n//               <li className=\"nav-item\">\r\n//                 <Link to=\"/dashboard/ChatSystem\" className=\"nav-link\">\r\n//                   Chat System\r\n//                 </Link>\r\n//               </li>\r\n//               <li className=\"nav-item\">\r\n//                 <Link to=\"/dashboard/achievements\" className=\"nav-link\">\r\n//                   Track Achievements\r\n//                 </Link>\r\n//               </li>\r\n//               <li className=\"nav-item\">\r\n//                 <Link to=\"/dashboard/progressreport\" className=\"nav-link\">\r\n//                   View Progress Report\r\n//                 </Link>\r\n//               </li>\r\n             </ul>\r\n           </div>\r\n        </nav>\r\n        \r\n        <main className=\"col-md-9 ms-sm-auto col-lg-10 px-md-4\">\r\n          <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\r\n            <h1 className=\"h2\">Dashboard</h1>\r\n            <LogoutButton />\r\n          </div>\r\n\r\n          {/* Display user data */}\r\n          {userInfo ? (\r\n            <div>\r\n              <div>\r\n                {photoUploaded ? (\r\n                  <div>\r\n                    {isEditingProfilePhoto ? (\r\n                      <div>\r\n                        <img src={URL.createObjectURL(selectedPhoto)} alt=\"User\" />\r\n                        <button onClick={saveProfilePhoto}>Save</button>\r\n                      </div>\r\n                    ) : (\r\n                      <div>\r\n                        <img src={URL.createObjectURL(selectedPhoto)} alt=\"User\" />\r\n                        <button onClick={() => setIsEditingProfilePhoto(true)}>Edit Photo</button>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                ) : (\r\n                  <div>\r\n                    <input type=\"file\" accept=\"image/*\" onChange={handleProfilePhotoChange} />\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <p>Name: {userInfo.name}</p>\r\n              <p>Email: {userInfo.email}</p>\r\n              <p>Student Id: {userInfo.studentId}</p>\r\n              {userInfo.startDate && (\r\n                <p>Start Date: {formatStartDate(userInfo.startDate)}</p>\r\n              )}\r\n              {currentSemester !== null && (\r\n                <p>Current Semester: {currentSemester}</p>\r\n              )}\r\n            </div>\r\n          ) : (\r\n            <p>Loading user data...</p>\r\n          )}\r\n\r\n          <Routes>\r\n            <Route path=\"/dashboard/achievements\" element={<Achievements />} />\r\n          </Routes>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n// import { Link, Route, Routes, useNavigate } from \"react-router-dom\";\r\n// import \"./dashboard.css\";\r\n// import Achievements from \"./achievements/achievements\";\r\n// import LogoutButton from \"./logout/logout\";\r\n// import { useAuth } from \"./AuthContext\";\r\n\r\n// const Dashboard = () => {\r\n//   const { token, email } = useAuth();\r\n//   const [userInfo, setUserInfo] = useState(null);\r\n//   const [currentSemester, setCurrentSemester] = useState(null);\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     // Make an API request to fetch user data\r\n//     const fetchUserInfo = async () => {\r\n//       try {\r\n//         if (token && email) {\r\n//           const response = await fetch(`http://localhost:9002/info?email=${email}`, {\r\n//             headers: {\r\n//               Authorization: `Bearer ${token}`,\r\n//             },\r\n//           });\r\n//           if (response.status === 200) {\r\n//             const userData = await response.json();\r\n//             setUserInfo(userData);\r\n\r\n//             // Calculate current semester based on a fixed start date\r\n//             const startDate = new Date(userData.startDate);\r\n//             const currentDate = new Date();\r\n\r\n//             // Calculate the difference in months\r\n//             const diffMonths = (currentDate.getFullYear() - startDate.getFullYear()) * 12 + (currentDate.getMonth() - startDate.getMonth());\r\n//             const currentSemesterNumber = Math.floor(diffMonths / 5) + 1;\r\n//             setCurrentSemester(currentSemesterNumber);\r\n\r\n//             // Navigate to the same route to reload the page\r\n//             navigate('/dashboard', { replace: true });\r\n//           } else {\r\n//             console.error('Failed to fetch user information');\r\n//           }\r\n//         }\r\n//       } catch (error) {\r\n//         console.error('Fetch user info error:', error);\r\n//       }\r\n//     };\r\n\r\n//     if (token) {\r\n//       fetchUserInfo();\r\n//     }\r\n//   }, [token, email, navigate]);\r\n\r\n//   const formatStartDate = (dateString) => {\r\n//     const date = new Date(dateString);\r\n//     return date.toLocaleDateString('en-US');\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container-fluid\">\r\n//       <div className=\"row\">\r\n//         <nav id=\"sidebar\" className=\"col-md-3 col-lg-2 d-md-block bg-light sidebar\">\r\n//           <div className=\"position-sticky\">\r\n//             <ul className=\"nav flex-column\">\r\n//               <li className=\"nav-item\">\r\n//                 <Link to=\"/dashboard/ChatSystem\" className=\"nav-link\">\r\n//                   Chat System\r\n//                 </Link>\r\n//               </li>\r\n//               <li className=\"nav-item\">\r\n//                 <Link to=\"/dashboard/achievements\" className=\"nav-link\">\r\n//                   Track Achievements\r\n//                 </Link>\r\n//               </li>\r\n//               <li className=\"nav-item\">\r\n//                 <Link to=\"/dashboard/progressreport\" className=\"nav-link\">\r\n//                   View Progress Report\r\n//                 </Link>\r\n//               </li>\r\n//             </ul>\r\n//           </div>\r\n//         </nav>\r\n\r\n//         <main className=\"col-md-9 ms-sm-auto col-lg-10 px-md-4\">\r\n//           <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\r\n//             <h1 className=\"h2\">Dashboard</h1>\r\n//             <LogoutButton />\r\n//           </div>\r\n             \r\n//           {/* Display user data */}\r\n//           {userInfo ? (\r\n//             <div>\r\n//               <img src={userInfo.photo} alt=\"User\" />\r\n//               <p>Name: {userInfo.name}</p>\r\n//               <p>Email: {userInfo.email}</p>\r\n//               <p>Student Id: {userInfo.studentId}</p>\r\n//               {userInfo.startDate && (\r\n//                 <p>Start Date: {formatStartDate(userInfo.startDate)}</p>\r\n//               )}\r\n//               {currentSemester !== null && (\r\n//                 <p>Current Semester: {currentSemester}</p>\r\n//               )}\r\n//             </div>\r\n//           ) : (\r\n//             <p>Loading user data...</p>\r\n//           )}\r\n             \r\n//           <Routes>\r\n//             <Route path=\"/dashboard/achievements\" element={<Achievements />} />\r\n//           </Routes>\r\n//         </main>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Dashboard;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}