{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Desktop\\\\sem5\\\\Project\\\\New\\\\new\\\\src\\\\components\\\\adminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Link, Route, Routes, useNavigate } from \"react-router-dom\";\nimport LogoutButton from \"./logout/logout\";\nimport { useAuth } from \"./AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const {\n    token,\n    email\n  } = useAuth();\n  const [adminInfo, setAdminInfo] = useState(null);\n  const [isAdmin, setIsAdmin] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedPhoto, setSelectedPhoto] = useState(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchAdminInfo = async () => {\n      try {\n        if (token && isAdmin && email) {\n          const response = await fetch(`http://localhost:9002/data?email=${email}`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          if (response.status === 200) {\n            const adminData = await response.json();\n            setAdminInfo(adminData);\n            setSelectedPhoto(adminData.photo);\n          }\n          setIsLoading(false);\n        } else {\n          console.error('Failed to fetch admin information');\n        }\n      } catch (error) {\n        console.error('Fetch admin info error:', error);\n      }\n    };\n    if (token && isAdmin && email) {\n      fetchAdminInfo();\n    }\n  }, [token, isAdmin, email, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        id: \"sidebar\",\n        className: \"col-md-3 col-lg-2 d-md-block bg-light sidebar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"position-sticky\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"nav flex-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/admindashboard/ChatSystem\",\n                className: \"nav-link\",\n                children: \"Chat System\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/admindashboard/form\",\n                className: \"nav-link\",\n                children: \"Form\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"col-md-9 ms-sm-auto col-lg-10 px-md-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"h2\",\n            children: \"Admin Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LogoutButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading admin data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this) :\n        /*#__PURE__*/\n        /* Display admin data when it's available */\n        _jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: selectedPhoto !== null ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `data:image/jpeg;base64,${selectedPhoto}`,\n                alt: \"User Photo\",\n                style: {\n                  maxWidth: '200px',\n                  borderRadius: '50%'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 20\n              }, this), \" \", adminInfo.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Email:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 20\n              }, this), \" \", adminInfo.email]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Admin Id:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 20\n              }, this), \" \", adminInfo.adminId]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"eAnm03YvMG+xz4q9ERCEjuJrIUc=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = AdminDashboard;\nexport default AdminDashboard;\n\n// import React, { useState, useEffect } from \"react\";\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// import {  Routes, useNavigate } from \"react-router-dom\";\n// // import \"./dashboard.css\";\n// import LogoutButton from \"./logout/logout\";\n// import { useAuth } from \"./AuthContext\";\n\n// const AdminDashboard = () => {\n//   const { token } = useAuth();\n//   const [adminInfo, setAdminInfo] = useState(null);\n//   const [isAdmin, setIsAdmin] = useState(false); // You need a way to determine if it's an admin\n//   const [adminEmail, setAdminEmail] = useState(''); // Set the admin's email here\n//   const [isLoading, setIsLoading] = useState(true);\n//   const [selectedPhoto, setSelectedPhoto] = useState(null);\n\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     const fetchAdminInfo = async () => {\n//       try {\n//         if (token && isAdmin) { // Check if it's an admin\n//           // Fetch admin information based on email\n//           const response = await fetch(`/data?email=${adminEmail}`, {\n//             headers: {\n//               Authorization: `Bearer ${token}`,\n//             },\n//           });\n\n//           if (response.status === 200) {\n//             const adminData = await response.json();\n//             setAdminInfo(adminData);\n\n//             setSelectedPhoto(adminData.photo);\n\n//     setIsLoading(false);\n// } else {\n//   console.error('Failed to fetch user information');\n// }\n// }\n// } catch (error) {\n// console.error('Fetch user info error:', error);\n// }\n// };\n\n//     if (token) {\n//       fetchAdminInfo();\n//     }\n//   }, [token, isAdmin, adminEmail, navigate]);\n\n//   // Example role-based content rendering\n//   const renderAdminContent = () => {\n//     if (adminEmail === \"sumegha.shretha@deerwalk.edu.np\") {\n//       // Render a form for entering student information\n//       return <div>Form for entering student information</div>;\n//     } else if (adminEmail === \"sarthak.singh@deerwalk.edu.np\") {\n//       // Render a form for entering student marks\n//       return <div>Form for entering student marks</div>;\n//     } else if (adminEmail === \"sudin.rajbhandari@deerwalk.edu.np\") {\n//       // Render a form for entering student achievements\n//       return <div>Form for entering student achievements</div>;\n//     } else {\n//       return null; // No specific role-based content\n//     }\n//   };\n\n//   return (\n//     <div className=\"container-fluid\">\n//       <div className=\"row\">\n//         <nav id=\"sidebar\" className=\"col-md-3 col-lg-2 d-md-block bg-light sidebar\">\n//           <div className=\"position-sticky\">\n//             <ul className=\"nav flex-column\">\n//               {/* Add your admin-specific navigation links here */}\n//             </ul>\n//           </div>\n//         </nav>\n\n//         {/* Main content */}\n//         <main className=\"col-md-9 ms-sm-auto col-lg-10 px-md-4\">\n//           <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n//             <h1 className=\"h2\">Admin Dashboard</h1>\n//             <LogoutButton />\n//           </div>\n\n//           {isLoading ? (\n//             <p>Loading user data...</p>\n//           ) : (\n//             /* Display user data when it's available */\n//             <div>\n//               <div>\n//                 {selectedPhoto !== null ? (\n//                   <div>\n//                     <img src={`data:image/jpeg;base64,${selectedPhoto}`}\n//                       alt=\"User Photo\"\n//                       style={{ maxWidth: '200px', borderRadius: '50%' }}\n//                     />\n//                   </div>\n//                 ) : (\n//                   <div>\n//                     {/* You can add an input for changing the photo here if needed */}\n//                   </div>\n//                 )}\n//               </div>\n//               <div className=\"mt-4\">\n//                 <p><strong>Name:</strong> {adminInfo.name}</p>\n//                 <p><strong>Email:</strong> {adminInfo.email}</p>\n//                 <p><strong>Admin Id:</strong> {adminInfo.adminId}</p>\n//               </div>\n//             </div>\n//           )}\n\n//           <Routes>\n//             {/* Define your admin-specific routes here */}\n//           </Routes>\n//         </main>\n//       </div>\n//     </div>\n//   );\n// }\n//  export default AdminDashboard  \nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","Link","Route","Routes","useNavigate","LogoutButton","useAuth","jsxDEV","_jsxDEV","AdminDashboard","_s","token","email","adminInfo","setAdminInfo","isAdmin","setIsAdmin","isLoading","setIsLoading","selectedPhoto","setSelectedPhoto","navigate","fetchAdminInfo","response","fetch","headers","Authorization","status","adminData","json","photo","console","error","className","children","id","to","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","style","maxWidth","borderRadius","name","adminId","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Desktop/sem5/Project/New/new/src/components/adminDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Link, Route, Routes, useNavigate } from \"react-router-dom\";\r\nimport LogoutButton from \"./logout/logout\";\r\nimport { useAuth } from \"./AuthContext\";\r\n\r\nconst AdminDashboard = () => {\r\n  const { token, email } = useAuth();\r\n  const [adminInfo, setAdminInfo] = useState(null);\r\n  const [isAdmin, setIsAdmin] = useState(false);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [selectedPhoto, setSelectedPhoto] = useState(null);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchAdminInfo = async () => {\r\n      try {\r\n        if (token && isAdmin && email) {\r\n          \r\n          const response = await fetch(`http://localhost:9002/data?email=${email}`, {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          });\r\n\r\n          if (response.status === 200) {\r\n            const adminData = await response.json();\r\n            setAdminInfo(adminData);\r\n            setSelectedPhoto(adminData.photo);\r\n          }\r\n\r\n          setIsLoading(false);\r\n        } else {\r\n          console.error('Failed to fetch admin information');\r\n        }\r\n      } catch (error) {\r\n        console.error('Fetch admin info error:', error);\r\n      }\r\n    };\r\n\r\n    if (token && isAdmin && email) {\r\n      fetchAdminInfo();\r\n    }\r\n  }, [token, isAdmin, email, navigate]);\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <nav id=\"sidebar\" className=\"col-md-3 col-lg-2 d-md-block bg-light sidebar\">\r\n          <div className=\"position-sticky\">\r\n            <ul className=\"nav flex-column\">\r\n            <li className=\"nav-item\">\r\n                <Link to=\"/admindashboard/ChatSystem\" className=\"nav-link\">\r\n                  Chat System\r\n                </Link>\r\n              </li>  \r\n              <li className=\"nav-item\">\r\n                <Link to=\"/admindashboard/form\" className=\"nav-link\">\r\n                  Form\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n\r\n        {/* Main content */}\r\n        <main className=\"col-md-9 ms-sm-auto col-lg-10 px-md-4\">\r\n          <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\r\n            <h1 className=\"h2\">Admin Dashboard</h1>\r\n            <LogoutButton />\r\n          </div>\r\n\r\n          {isLoading ? (\r\n            <p>Loading admin data...</p>\r\n          ) : (\r\n            /* Display admin data when it's available */\r\n            <div>\r\n              <div>\r\n                {selectedPhoto !== null ? (\r\n                  <div>\r\n                    <img src={`data:image/jpeg;base64,${selectedPhoto}`}\r\n                      alt=\"User Photo\"\r\n                      style={{ maxWidth: '200px', borderRadius: '50%' }}\r\n                    />\r\n                  </div>\r\n                ) : (\r\n                  <div>\r\n                    {/* You can add an input for changing the photo here if needed */}\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div className=\"mt-4\">\r\n                <p><strong>Name:</strong> {adminInfo.name}</p>\r\n                <p><strong>Email:</strong> {adminInfo.email}</p>\r\n                <p><strong>Admin Id:</strong> {adminInfo.adminId}</p>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          <Routes>\r\n            {/* Define your admin-specific routes here */}\r\n          </Routes>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminDashboard;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n// import {  Routes, useNavigate } from \"react-router-dom\";\r\n// // import \"./dashboard.css\";\r\n// import LogoutButton from \"./logout/logout\";\r\n// import { useAuth } from \"./AuthContext\";\r\n\r\n// const AdminDashboard = () => {\r\n//   const { token } = useAuth();\r\n//   const [adminInfo, setAdminInfo] = useState(null);\r\n//   const [isAdmin, setIsAdmin] = useState(false); // You need a way to determine if it's an admin\r\n//   const [adminEmail, setAdminEmail] = useState(''); // Set the admin's email here\r\n//   const [isLoading, setIsLoading] = useState(true);\r\n//   const [selectedPhoto, setSelectedPhoto] = useState(null);\r\n\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     const fetchAdminInfo = async () => {\r\n//       try {\r\n//         if (token && isAdmin) { // Check if it's an admin\r\n//           // Fetch admin information based on email\r\n//           const response = await fetch(`/data?email=${adminEmail}`, {\r\n//             headers: {\r\n//               Authorization: `Bearer ${token}`,\r\n//             },\r\n//           });\r\n\r\n//           if (response.status === 200) {\r\n//             const adminData = await response.json();\r\n//             setAdminInfo(adminData);\r\n\r\n//             setSelectedPhoto(adminData.photo);\r\n         \r\n//     setIsLoading(false);\r\n// } else {\r\n//   console.error('Failed to fetch user information');\r\n// }\r\n// }\r\n// } catch (error) {\r\n// console.error('Fetch user info error:', error);\r\n// }\r\n// };\r\n\r\n//     if (token) {\r\n//       fetchAdminInfo();\r\n//     }\r\n//   }, [token, isAdmin, adminEmail, navigate]);\r\n\r\n//   // Example role-based content rendering\r\n//   const renderAdminContent = () => {\r\n//     if (adminEmail === \"sumegha.shretha@deerwalk.edu.np\") {\r\n//       // Render a form for entering student information\r\n//       return <div>Form for entering student information</div>;\r\n//     } else if (adminEmail === \"sarthak.singh@deerwalk.edu.np\") {\r\n//       // Render a form for entering student marks\r\n//       return <div>Form for entering student marks</div>;\r\n//     } else if (adminEmail === \"sudin.rajbhandari@deerwalk.edu.np\") {\r\n//       // Render a form for entering student achievements\r\n//       return <div>Form for entering student achievements</div>;\r\n//     } else {\r\n//       return null; // No specific role-based content\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container-fluid\">\r\n//       <div className=\"row\">\r\n//         <nav id=\"sidebar\" className=\"col-md-3 col-lg-2 d-md-block bg-light sidebar\">\r\n//           <div className=\"position-sticky\">\r\n//             <ul className=\"nav flex-column\">\r\n//               {/* Add your admin-specific navigation links here */}\r\n//             </ul>\r\n//           </div>\r\n//         </nav>\r\n  \r\n//         {/* Main content */}\r\n//         <main className=\"col-md-9 ms-sm-auto col-lg-10 px-md-4\">\r\n//           <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\r\n//             <h1 className=\"h2\">Admin Dashboard</h1>\r\n//             <LogoutButton />\r\n//           </div>\r\n  \r\n//           {isLoading ? (\r\n//             <p>Loading user data...</p>\r\n//           ) : (\r\n//             /* Display user data when it's available */\r\n//             <div>\r\n//               <div>\r\n//                 {selectedPhoto !== null ? (\r\n//                   <div>\r\n//                     <img src={`data:image/jpeg;base64,${selectedPhoto}`}\r\n//                       alt=\"User Photo\"\r\n//                       style={{ maxWidth: '200px', borderRadius: '50%' }}\r\n//                     />\r\n//                   </div>\r\n//                 ) : (\r\n//                   <div>\r\n//                     {/* You can add an input for changing the photo here if needed */}\r\n//                   </div>\r\n//                 )}\r\n//               </div>\r\n//               <div className=\"mt-4\">\r\n//                 <p><strong>Name:</strong> {adminInfo.name}</p>\r\n//                 <p><strong>Email:</strong> {adminInfo.email}</p>\r\n//                 <p><strong>Admin Id:</strong> {adminInfo.adminId}</p>\r\n//               </div>\r\n//             </div>\r\n//           )}\r\n  \r\n//           <Routes>\r\n//             {/* Define your admin-specific routes here */}\r\n//           </Routes>\r\n//         </main>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n//  export default AdminDashboard  \r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}