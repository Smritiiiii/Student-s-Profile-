{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Desktop\\\\sem5\\\\Project\\\\New\\\\new\\\\src\\\\components\\\\dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Link, Route, Routes, useNavigate } from \"react-router-dom\";\nimport \"./dashboard.css\";\nimport Achievements from \"./achievements/achievements\";\nimport LogoutButton from \"./logout/logout\";\nimport { useAuth } from \"./AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const {\n    token,\n    email\n  } = useAuth();\n  const [userInfo, setUserInfo] = useState(null);\n  const [currentSemester, setCurrentSemester] = useState(null);\n  const [profilePhoto, setProfilePhoto] = useState(null); // State for profile photo\n  const [selectedPhoto, setSelectedPhoto] = useState(null);\n  const [isEditingProfilePhoto, setIsEditingProfilePhoto] = useState(false);\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Make an API request to fetch user data\n    const fetchUserInfo = async () => {\n      try {\n        if (token && email) {\n          const response = await fetch(`http://localhost:9002/info?email=${email}`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          if (response.status === 200) {\n            const userData = await response.json();\n            setUserInfo(userData);\n\n            // Calculate current semester based on a fixed start date\n            const startDate = new Date(userData.startDate);\n            const currentDate = new Date();\n\n            // Calculate the difference in months\n            const diffMonths = (currentDate.getFullYear() - startDate.getFullYear()) * 12 + (currentDate.getMonth() - startDate.getMonth());\n            const currentSemesterNumber = Math.floor(diffMonths / 5) + 1;\n            setCurrentSemester(currentSemesterNumber);\n\n            // Set profile photo URL\n            setProfilePhoto(userData.photo);\n          } else {\n            console.error('Failed to fetch user information');\n          }\n        }\n      } catch (error) {\n        console.error('Fetch user info error:', error);\n      }\n    };\n    if (token) {\n      fetchUserInfo();\n    }\n  }, [token, email, navigate]);\n  const formatStartDate = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleDateString('en-US');\n  };\n\n  // Function to handle file input change for profile photo\n  const handleProfilePhotoChange = e => {\n    const selectedPhoto = e.target.files[0];\n  };\n\n  // Function to save the edited profile photo\n  const saveProfilePhoto = async () => {\n    try {\n      // Create a form data to send the photo to the server\n      const formData = new FormData();\n      formData.append('photo', selectedPhoto);\n\n      // Make an API request to save the photo\n      const response = await fetch('http://localhost:9002/editProfilePhoto', {\n        method: 'POST',\n        headers: {\n          Authorization: `Bearer ${token}`\n        },\n        body: formData\n      });\n      if (response.status === 200) {\n        setIsEditingProfilePhoto(false);\n      } else {\n        console.error('Failed to save profile photo');\n      }\n    } catch (error) {\n      console.error('Save profile photo error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        id: \"sidebar\",\n        className: \"col-md-3 col-lg-2 d-md-block bg-light sidebar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"position-sticky\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"nav flex-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/dashboard/ChatSystem\",\n                className: \"nav-link\",\n                children: \"Chat System\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/dashboard/achievements\",\n                className: \"nav-link\",\n                children: \"Track Achievements\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/dashboard/progressreport\",\n                className: \"nav-link\",\n                children: \"View Progress Report\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"col-md-9 ms-sm-auto col-lg-10 px-md-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"h2\",\n            children: \"Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LogoutButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), userInfo ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: isEditingProfilePhoto ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: profilePhoto,\n                alt: \"User\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"file\",\n                accept: \"image/*\",\n                onChange: handleProfilePhotoChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: saveProfilePhoto,\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: profilePhoto,\n                alt: \"User\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => setIsEditingProfilePhoto(true),\n                children: \"Edit Photo\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Name: \", userInfo.name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Email: \", userInfo.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Student Id: \", userInfo.studentId]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this), userInfo.startDate && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Start Date: \", formatStartDate(userInfo.startDate)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 17\n          }, this), currentSemester !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Current Semester: \", currentSemester]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading user data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Routes, {\n          children: /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/dashboard/achievements\",\n            element: /*#__PURE__*/_jsxDEV(Achievements, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 60\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"wGBUJwNr+yNEH57XuzeaVa6tCy4=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\n\n// import React, { useState, useEffect } from \"react\";\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// import { Link, Route, Routes, useNavigate } from \"react-router-dom\";\n// import \"./dashboard.css\";\n// import Achievements from \"./achievements/achievements\";\n// import LogoutButton from \"./logout/logout\";\n// import { useAuth } from \"./AuthContext\";\n\n// const Dashboard = () => {\n//   const { token, email } = useAuth();\n//   const [userInfo, setUserInfo] = useState(null);\n//   const [currentSemester, setCurrentSemester] = useState(null);\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     // Make an API request to fetch user data\n//     const fetchUserInfo = async () => {\n//       try {\n//         if (token && email) {\n//           const response = await fetch(`http://localhost:9002/info?email=${email}`, {\n//             headers: {\n//               Authorization: `Bearer ${token}`,\n//             },\n//           });\n//           if (response.status === 200) {\n//             const userData = await response.json();\n//             setUserInfo(userData);\n\n//             // Calculate current semester based on a fixed start date\n//             const startDate = new Date(userData.startDate);\n//             const currentDate = new Date();\n\n//             // Calculate the difference in months\n//             const diffMonths = (currentDate.getFullYear() - startDate.getFullYear()) * 12 + (currentDate.getMonth() - startDate.getMonth());\n//             const currentSemesterNumber = Math.floor(diffMonths / 5) + 1;\n//             setCurrentSemester(currentSemesterNumber);\n\n//             // Navigate to the same route to reload the page\n//             navigate('/dashboard', { replace: true });\n//           } else {\n//             console.error('Failed to fetch user information');\n//           }\n//         }\n//       } catch (error) {\n//         console.error('Fetch user info error:', error);\n//       }\n//     };\n\n//     if (token) {\n//       fetchUserInfo();\n//     }\n//   }, [token, email, navigate]);\n\n//   const formatStartDate = (dateString) => {\n//     const date = new Date(dateString);\n//     return date.toLocaleDateString('en-US');\n//   };\n\n//   return (\n//     <div className=\"container-fluid\">\n//       <div className=\"row\">\n//         <nav id=\"sidebar\" className=\"col-md-3 col-lg-2 d-md-block bg-light sidebar\">\n//           <div className=\"position-sticky\">\n//             <ul className=\"nav flex-column\">\n//               <li className=\"nav-item\">\n//                 <Link to=\"/dashboard/ChatSystem\" className=\"nav-link\">\n//                   Chat System\n//                 </Link>\n//               </li>\n//               <li className=\"nav-item\">\n//                 <Link to=\"/dashboard/achievements\" className=\"nav-link\">\n//                   Track Achievements\n//                 </Link>\n//               </li>\n//               <li className=\"nav-item\">\n//                 <Link to=\"/dashboard/progressreport\" className=\"nav-link\">\n//                   View Progress Report\n//                 </Link>\n//               </li>\n//             </ul>\n//           </div>\n//         </nav>\n\n//         <main className=\"col-md-9 ms-sm-auto col-lg-10 px-md-4\">\n//           <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n//             <h1 className=\"h2\">Dashboard</h1>\n//             <LogoutButton />\n//           </div>\n\n//           {/* Display user data */}\n//           {userInfo ? (\n//             <div>\n//               <img src={userInfo.photo} alt=\"User\" />\n//               <p>Name: {userInfo.name}</p>\n//               <p>Email: {userInfo.email}</p>\n//               <p>Student Id: {userInfo.studentId}</p>\n//               {userInfo.startDate && (\n//                 <p>Start Date: {formatStartDate(userInfo.startDate)}</p>\n//               )}\n//               {currentSemester !== null && (\n//                 <p>Current Semester: {currentSemester}</p>\n//               )}\n//             </div>\n//           ) : (\n//             <p>Loading user data...</p>\n//           )}\n\n//           <Routes>\n//             <Route path=\"/dashboard/achievements\" element={<Achievements />} />\n//           </Routes>\n//         </main>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Link","Route","Routes","useNavigate","Achievements","LogoutButton","useAuth","jsxDEV","_jsxDEV","Dashboard","_s","token","email","userInfo","setUserInfo","currentSemester","setCurrentSemester","profilePhoto","setProfilePhoto","selectedPhoto","setSelectedPhoto","isEditingProfilePhoto","setIsEditingProfilePhoto","navigate","fetchUserInfo","response","fetch","headers","Authorization","status","userData","json","startDate","Date","currentDate","diffMonths","getFullYear","getMonth","currentSemesterNumber","Math","floor","photo","console","error","formatStartDate","dateString","date","toLocaleDateString","handleProfilePhotoChange","e","target","files","saveProfilePhoto","formData","FormData","append","method","body","className","children","id","to","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","type","accept","onChange","onClick","name","studentId","path","element","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Desktop/sem5/Project/New/new/src/components/dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Link, Route, Routes, useNavigate } from \"react-router-dom\";\r\nimport \"./dashboard.css\";\r\nimport Achievements from \"./achievements/achievements\";\r\nimport LogoutButton from \"./logout/logout\";\r\nimport { useAuth } from \"./AuthContext\";\r\n\r\nconst Dashboard = () => {\r\n  const { token, email } = useAuth();\r\n  const [userInfo, setUserInfo] = useState(null);\r\n  const [currentSemester, setCurrentSemester] = useState(null);\r\n  const [profilePhoto, setProfilePhoto] = useState(null); // State for profile photo\r\n  const [selectedPhoto, setSelectedPhoto] = useState(null);\r\n  const [isEditingProfilePhoto, setIsEditingProfilePhoto] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Make an API request to fetch user data\r\n    const fetchUserInfo = async () => {\r\n      try {\r\n        if (token && email) {\r\n          const response = await fetch(`http://localhost:9002/info?email=${email}`, {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          });\r\n          if (response.status === 200) {\r\n            const userData = await response.json();\r\n            setUserInfo(userData);\r\n\r\n            // Calculate current semester based on a fixed start date\r\n            const startDate = new Date(userData.startDate);\r\n            const currentDate = new Date();\r\n\r\n            // Calculate the difference in months\r\n            const diffMonths = (currentDate.getFullYear() - startDate.getFullYear()) * 12 + (currentDate.getMonth() - startDate.getMonth());\r\n            const currentSemesterNumber = Math.floor(diffMonths / 5) + 1;\r\n            setCurrentSemester(currentSemesterNumber);\r\n\r\n            // Set profile photo URL\r\n            setProfilePhoto(userData.photo);\r\n          } else {\r\n            console.error('Failed to fetch user information');\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Fetch user info error:', error);\r\n      }\r\n    };\r\n\r\n    if (token) {\r\n      fetchUserInfo();\r\n    }\r\n  }, [token, email, navigate]);\r\n\r\n  const formatStartDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    return date.toLocaleDateString('en-US');\r\n  };\r\n\r\n  // Function to handle file input change for profile photo\r\n  const handleProfilePhotoChange = (e) => {\r\n    const selectedPhoto = e.target.files[0];\r\n\r\n   \r\n  };\r\n\r\n  // Function to save the edited profile photo\r\n  const saveProfilePhoto = async () => {\r\n    try {\r\n      // Create a form data to send the photo to the server\r\n      const formData = new FormData();\r\n      formData.append('photo', selectedPhoto);\r\n\r\n      // Make an API request to save the photo\r\n      const response = await fetch('http://localhost:9002/editProfilePhoto', {\r\n        method: 'POST',\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: formData,\r\n      });\r\n\r\n      if (response.status === 200) {\r\n        setIsEditingProfilePhoto(false);\r\n      } else {\r\n        console.error('Failed to save profile photo');\r\n      }\r\n    } catch (error) {\r\n      console.error('Save profile photo error:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <nav id=\"sidebar\" className=\"col-md-3 col-lg-2 d-md-block bg-light sidebar\">\r\n          <div className=\"position-sticky\">\r\n            <ul className=\"nav flex-column\">\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/dashboard/ChatSystem\" className=\"nav-link\">\r\n                  Chat System\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/dashboard/achievements\" className=\"nav-link\">\r\n                  Track Achievements\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/dashboard/progressreport\" className=\"nav-link\">\r\n                  View Progress Report\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n\r\n        <main className=\"col-md-9 ms-sm-auto col-lg-10 px-md-4\">\r\n          <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\r\n            <h1 className=\"h2\">Dashboard</h1>\r\n            <LogoutButton />\r\n          </div>\r\n\r\n          {/* Display user data */}\r\n          {userInfo ? (\r\n            <div>\r\n              <div>\r\n                {isEditingProfilePhoto ? (\r\n                  <div>\r\n                    <img src={profilePhoto} alt=\"User\" />\r\n                    <input type=\"file\" accept=\"image/*\" onChange={handleProfilePhotoChange} />\r\n                    <button onClick={saveProfilePhoto}>Save</button>\r\n                  </div>\r\n                ) : (\r\n                  <div>\r\n                    <img src={profilePhoto} alt=\"User\" />\r\n                    <button onClick={() => setIsEditingProfilePhoto(true)}>Edit Photo</button>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <p>Name: {userInfo.name}</p>\r\n              <p>Email: {userInfo.email}</p>\r\n              <p>Student Id: {userInfo.studentId}</p>\r\n              {userInfo.startDate && (\r\n                <p>Start Date: {formatStartDate(userInfo.startDate)}</p>\r\n              )}\r\n              {currentSemester !== null && (\r\n                <p>Current Semester: {currentSemester}</p>\r\n              )}\r\n            </div>\r\n          ) : (\r\n            <p>Loading user data...</p>\r\n          )}\r\n\r\n          <Routes>\r\n            <Route path=\"/dashboard/achievements\" element={<Achievements />} />\r\n          </Routes>\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n// import { Link, Route, Routes, useNavigate } from \"react-router-dom\";\r\n// import \"./dashboard.css\";\r\n// import Achievements from \"./achievements/achievements\";\r\n// import LogoutButton from \"./logout/logout\";\r\n// import { useAuth } from \"./AuthContext\";\r\n\r\n// const Dashboard = () => {\r\n//   const { token, email } = useAuth();\r\n//   const [userInfo, setUserInfo] = useState(null);\r\n//   const [currentSemester, setCurrentSemester] = useState(null);\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     // Make an API request to fetch user data\r\n//     const fetchUserInfo = async () => {\r\n//       try {\r\n//         if (token && email) {\r\n//           const response = await fetch(`http://localhost:9002/info?email=${email}`, {\r\n//             headers: {\r\n//               Authorization: `Bearer ${token}`,\r\n//             },\r\n//           });\r\n//           if (response.status === 200) {\r\n//             const userData = await response.json();\r\n//             setUserInfo(userData);\r\n\r\n//             // Calculate current semester based on a fixed start date\r\n//             const startDate = new Date(userData.startDate);\r\n//             const currentDate = new Date();\r\n\r\n//             // Calculate the difference in months\r\n//             const diffMonths = (currentDate.getFullYear() - startDate.getFullYear()) * 12 + (currentDate.getMonth() - startDate.getMonth());\r\n//             const currentSemesterNumber = Math.floor(diffMonths / 5) + 1;\r\n//             setCurrentSemester(currentSemesterNumber);\r\n\r\n//             // Navigate to the same route to reload the page\r\n//             navigate('/dashboard', { replace: true });\r\n//           } else {\r\n//             console.error('Failed to fetch user information');\r\n//           }\r\n//         }\r\n//       } catch (error) {\r\n//         console.error('Fetch user info error:', error);\r\n//       }\r\n//     };\r\n\r\n//     if (token) {\r\n//       fetchUserInfo();\r\n//     }\r\n//   }, [token, email, navigate]);\r\n\r\n//   const formatStartDate = (dateString) => {\r\n//     const date = new Date(dateString);\r\n//     return date.toLocaleDateString('en-US');\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container-fluid\">\r\n//       <div className=\"row\">\r\n//         <nav id=\"sidebar\" className=\"col-md-3 col-lg-2 d-md-block bg-light sidebar\">\r\n//           <div className=\"position-sticky\">\r\n//             <ul className=\"nav flex-column\">\r\n//               <li className=\"nav-item\">\r\n//                 <Link to=\"/dashboard/ChatSystem\" className=\"nav-link\">\r\n//                   Chat System\r\n//                 </Link>\r\n//               </li>\r\n//               <li className=\"nav-item\">\r\n//                 <Link to=\"/dashboard/achievements\" className=\"nav-link\">\r\n//                   Track Achievements\r\n//                 </Link>\r\n//               </li>\r\n//               <li className=\"nav-item\">\r\n//                 <Link to=\"/dashboard/progressreport\" className=\"nav-link\">\r\n//                   View Progress Report\r\n//                 </Link>\r\n//               </li>\r\n//             </ul>\r\n//           </div>\r\n//         </nav>\r\n\r\n//         <main className=\"col-md-9 ms-sm-auto col-lg-10 px-md-4\">\r\n//           <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\r\n//             <h1 className=\"h2\">Dashboard</h1>\r\n//             <LogoutButton />\r\n//           </div>\r\n             \r\n//           {/* Display user data */}\r\n//           {userInfo ? (\r\n//             <div>\r\n//               <img src={userInfo.photo} alt=\"User\" />\r\n//               <p>Name: {userInfo.name}</p>\r\n//               <p>Email: {userInfo.email}</p>\r\n//               <p>Student Id: {userInfo.studentId}</p>\r\n//               {userInfo.startDate && (\r\n//                 <p>Start Date: {formatStartDate(userInfo.startDate)}</p>\r\n//               )}\r\n//               {currentSemester !== null && (\r\n//                 <p>Current Semester: {currentSemester}</p>\r\n//               )}\r\n//             </div>\r\n//           ) : (\r\n//             <p>Loading user data...</p>\r\n//           )}\r\n             \r\n//           <Routes>\r\n//             <Route path=\"/dashboard/achievements\" element={<Achievements />} />\r\n//           </Routes>\r\n//         </main>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Dashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,sCAAsC;AAC7C,SAASC,IAAI,EAAEC,KAAK,EAAEC,MAAM,EAAEC,WAAW,QAAQ,kBAAkB;AACnE,OAAO,iBAAiB;AACxB,OAAOC,YAAY,MAAM,6BAA6B;AACtD,OAAOC,YAAY,MAAM,iBAAiB;AAC1C,SAASC,OAAO,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM;IAAEC,KAAK;IAAEC;EAAM,CAAC,GAAGN,OAAO,CAAC,CAAC;EAClC,MAAM,CAACO,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACiB,eAAe,EAAEC,kBAAkB,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAC5D,MAAM,CAACmB,YAAY,EAAEC,eAAe,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACxD,MAAM,CAACqB,aAAa,EAAEC,gBAAgB,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACuB,qBAAqB,EAAEC,wBAAwB,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC;EACzE,MAAMyB,QAAQ,GAAGpB,WAAW,CAAC,CAAC;EAE9BJ,SAAS,CAAC,MAAM;IACd;IACA,MAAMyB,aAAa,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACF,IAAIb,KAAK,IAAIC,KAAK,EAAE;UAClB,MAAMa,QAAQ,GAAG,MAAMC,KAAK,CAAE,oCAAmCd,KAAM,EAAC,EAAE;YACxEe,OAAO,EAAE;cACPC,aAAa,EAAG,UAASjB,KAAM;YACjC;UACF,CAAC,CAAC;UACF,IAAIc,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAE;YAC3B,MAAMC,QAAQ,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;YACtCjB,WAAW,CAACgB,QAAQ,CAAC;;YAErB;YACA,MAAME,SAAS,GAAG,IAAIC,IAAI,CAACH,QAAQ,CAACE,SAAS,CAAC;YAC9C,MAAME,WAAW,GAAG,IAAID,IAAI,CAAC,CAAC;;YAE9B;YACA,MAAME,UAAU,GAAG,CAACD,WAAW,CAACE,WAAW,CAAC,CAAC,GAAGJ,SAAS,CAACI,WAAW,CAAC,CAAC,IAAI,EAAE,IAAIF,WAAW,CAACG,QAAQ,CAAC,CAAC,GAAGL,SAAS,CAACK,QAAQ,CAAC,CAAC,CAAC;YAC/H,MAAMC,qBAAqB,GAAGC,IAAI,CAACC,KAAK,CAACL,UAAU,GAAG,CAAC,CAAC,GAAG,CAAC;YAC5DnB,kBAAkB,CAACsB,qBAAqB,CAAC;;YAEzC;YACApB,eAAe,CAACY,QAAQ,CAACW,KAAK,CAAC;UACjC,CAAC,MAAM;YACLC,OAAO,CAACC,KAAK,CAAC,kCAAkC,CAAC;UACnD;QACF;MACF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IAED,IAAIhC,KAAK,EAAE;MACTa,aAAa,CAAC,CAAC;IACjB;EACF,CAAC,EAAE,CAACb,KAAK,EAAEC,KAAK,EAAEW,QAAQ,CAAC,CAAC;EAE5B,MAAMqB,eAAe,GAAIC,UAAU,IAAK;IACtC,MAAMC,IAAI,GAAG,IAAIb,IAAI,CAACY,UAAU,CAAC;IACjC,OAAOC,IAAI,CAACC,kBAAkB,CAAC,OAAO,CAAC;EACzC,CAAC;;EAED;EACA,MAAMC,wBAAwB,GAAIC,CAAC,IAAK;IACtC,MAAM9B,aAAa,GAAG8B,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;EAGzC,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEpC,aAAa,CAAC;;MAEvC;MACA,MAAMM,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,EAAE;QACrE8B,MAAM,EAAE,MAAM;QACd7B,OAAO,EAAE;UACPC,aAAa,EAAG,UAASjB,KAAM;QACjC,CAAC;QACD8C,IAAI,EAAEJ;MACR,CAAC,CAAC;MAEF,IAAI5B,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAE;QAC3BP,wBAAwB,CAAC,KAAK,CAAC;MACjC,CAAC,MAAM;QACLoB,OAAO,CAACC,KAAK,CAAC,8BAA8B,CAAC;MAC/C;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdD,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAED,oBACEnC,OAAA;IAAKkD,SAAS,EAAC,iBAAiB;IAAAC,QAAA,eAC9BnD,OAAA;MAAKkD,SAAS,EAAC,KAAK;MAAAC,QAAA,gBAClBnD,OAAA;QAAKoD,EAAE,EAAC,SAAS;QAACF,SAAS,EAAC,+CAA+C;QAAAC,QAAA,eACzEnD,OAAA;UAAKkD,SAAS,EAAC,iBAAiB;UAAAC,QAAA,eAC9BnD,OAAA;YAAIkD,SAAS,EAAC,iBAAiB;YAAAC,QAAA,gBAC7BnD,OAAA;cAAIkD,SAAS,EAAC,UAAU;cAAAC,QAAA,eACtBnD,OAAA,CAACR,IAAI;gBAAC6D,EAAE,EAAC,uBAAuB;gBAACH,SAAS,EAAC,UAAU;gBAAAC,QAAA,EAAC;cAEtD;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC,eACLzD,OAAA;cAAIkD,SAAS,EAAC,UAAU;cAAAC,QAAA,eACtBnD,OAAA,CAACR,IAAI;gBAAC6D,EAAE,EAAC,yBAAyB;gBAACH,SAAS,EAAC,UAAU;gBAAAC,QAAA,EAAC;cAExD;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC,eACLzD,OAAA;cAAIkD,SAAS,EAAC,UAAU;cAAAC,QAAA,eACtBnD,OAAA,CAACR,IAAI;gBAAC6D,EAAE,EAAC,2BAA2B;gBAACH,SAAS,EAAC,UAAU;gBAAAC,QAAA,EAAC;cAE1D;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAM;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACL,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,eAENzD,OAAA;QAAMkD,SAAS,EAAC,uCAAuC;QAAAC,QAAA,gBACrDnD,OAAA;UAAKkD,SAAS,EAAC,yGAAyG;UAAAC,QAAA,gBACtHnD,OAAA;YAAIkD,SAAS,EAAC,IAAI;YAAAC,QAAA,EAAC;UAAS;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjCzD,OAAA,CAACH,YAAY;YAAAyD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACb,CAAC,EAGLpD,QAAQ,gBACPL,OAAA;UAAAmD,QAAA,gBACEnD,OAAA;YAAAmD,QAAA,EACGtC,qBAAqB,gBACpBb,OAAA;cAAAmD,QAAA,gBACEnD,OAAA;gBAAK0D,GAAG,EAAEjD,YAAa;gBAACkD,GAAG,EAAC;cAAM;gBAAAL,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eACrCzD,OAAA;gBAAO4D,IAAI,EAAC,MAAM;gBAACC,MAAM,EAAC,SAAS;gBAACC,QAAQ,EAAEtB;cAAyB;gBAAAc,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eAC1EzD,OAAA;gBAAQ+D,OAAO,EAAEnB,gBAAiB;gBAAAO,QAAA,EAAC;cAAI;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC7C,CAAC,gBAENzD,OAAA;cAAAmD,QAAA,gBACEnD,OAAA;gBAAK0D,GAAG,EAAEjD,YAAa;gBAACkD,GAAG,EAAC;cAAM;gBAAAL,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,eACrCzD,OAAA;gBAAQ+D,OAAO,EAAEA,CAAA,KAAMjD,wBAAwB,CAAC,IAAI,CAAE;gBAAAqC,QAAA,EAAC;cAAU;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvE;UACN;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACE,CAAC,eACNzD,OAAA;YAAAmD,QAAA,GAAG,QAAM,EAAC9C,QAAQ,CAAC2D,IAAI;UAAA;YAAAV,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC5BzD,OAAA;YAAAmD,QAAA,GAAG,SAAO,EAAC9C,QAAQ,CAACD,KAAK;UAAA;YAAAkD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC9BzD,OAAA;YAAAmD,QAAA,GAAG,cAAY,EAAC9C,QAAQ,CAAC4D,SAAS;UAAA;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EACtCpD,QAAQ,CAACmB,SAAS,iBACjBxB,OAAA;YAAAmD,QAAA,GAAG,cAAY,EAACf,eAAe,CAAC/B,QAAQ,CAACmB,SAAS,CAAC;UAAA;YAAA8B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CACxD,EACAlD,eAAe,KAAK,IAAI,iBACvBP,OAAA;YAAAmD,QAAA,GAAG,oBAAkB,EAAC5C,eAAe;UAAA;YAAA+C,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAC1C;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACE,CAAC,gBAENzD,OAAA;UAAAmD,QAAA,EAAG;QAAoB;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAC3B,eAEDzD,OAAA,CAACN,MAAM;UAAAyD,QAAA,eACLnD,OAAA,CAACP,KAAK;YAACyE,IAAI,EAAC,yBAAyB;YAACC,OAAO,eAAEnE,OAAA,CAACJ,YAAY;cAAA0D,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE;UAAE;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7D,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACvD,EAAA,CA3JID,SAAS;EAAA,QACYH,OAAO,EAMfH,WAAW;AAAA;AAAAyE,EAAA,GAPxBnE,SAAS;AA6Jf,eAAeA,SAAS;;AAMxmE,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}