{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Desktop\\\\sem5\\\\Project\\\\New\\\\new\\\\src\\\\components\\\\achievements\\\\achievements.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './a';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AchievementDropdown() {\n  _s();\n  const [showDropdown, setShowDropdown] = useState(false);\n  const [selectedOption, setSelectedOption] = useState('');\n\n  // Toggle the dropdown menu\n  const toggleDropdown = () => {\n    setShowDropdown(!showDropdown);\n  };\n\n  // Handle option selection\n  const handleOptionSelect = option => {\n    setSelectedOption(option);\n    setShowDropdown(false);\n\n    // You can perform any actions related to the selected option here\n    // For example, make an API request to fetch data based on the selected option\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dropdown\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"dropbtn\",\n      onClick: toggleDropdown,\n      children: \"View Achievement\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), showDropdown && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        onClick: () => handleOptionSelect('Option 1'),\n        children: \"Option 1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        onClick: () => handleOptionSelect('Option 2'),\n        children: \"Option 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        onClick: () => handleOptionSelect('Option 3'),\n        children: \"Option 3\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), selectedOption && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Selected Option: \", selectedOption]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(AchievementDropdown, \"SB1MdecuyAvb3Wz6jRS+pKYFnu0=\");\n_c = AchievementDropdown;\nexport default AchievementDropdown;\nvar _c;\n$RefreshReg$(_c, \"AchievementDropdown\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","AchievementDropdown","_s","showDropdown","setShowDropdown","selectedOption","setSelectedOption","toggleDropdown","handleOptionSelect","option","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Desktop/sem5/Project/New/new/src/components/achievements/achievements.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './a';\r\n\r\nfunction AchievementDropdown() {\r\n  const [showDropdown, setShowDropdown] = useState(false);\r\n  const [selectedOption, setSelectedOption] = useState('');\r\n\r\n  // Toggle the dropdown menu\r\n  const toggleDropdown = () => {\r\n    setShowDropdown(!showDropdown);\r\n  };\r\n\r\n  // Handle option selection\r\n  const handleOptionSelect = (option) => {\r\n    setSelectedOption(option);\r\n    setShowDropdown(false);\r\n\r\n    // You can perform any actions related to the selected option here\r\n    // For example, make an API request to fetch data based on the selected option\r\n  };\r\n\r\n  return (\r\n    <div className=\"dropdown\">\r\n      <button className=\"dropbtn\" onClick={toggleDropdown}>\r\n        View Achievement\r\n      </button>\r\n      {showDropdown && (\r\n        <div className=\"dropdown-content\">\r\n          <a onClick={() => handleOptionSelect('Option 1')}>Option 1</a>\r\n          <a onClick={() => handleOptionSelect('Option 2')}>Option 2</a>\r\n          <a onClick={() => handleOptionSelect('Option 3')}>Option 3</a>\r\n        </div>\r\n      )}\r\n      {selectedOption && <p>Selected Option: {selectedOption}</p>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AchievementDropdown;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,KAAK;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEb,SAASC,mBAAmBA,CAAA,EAAG;EAAAC,EAAA;EAC7B,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACO,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAExD;EACA,MAAMS,cAAc,GAAGA,CAAA,KAAM;IAC3BH,eAAe,CAAC,CAACD,YAAY,CAAC;EAChC,CAAC;;EAED;EACA,MAAMK,kBAAkB,GAAIC,MAAM,IAAK;IACrCH,iBAAiB,CAACG,MAAM,CAAC;IACzBL,eAAe,CAAC,KAAK,CAAC;;IAEtB;IACA;EACF,CAAC;;EAED,oBACEJ,OAAA;IAAKU,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvBX,OAAA;MAAQU,SAAS,EAAC,SAAS;MAACE,OAAO,EAAEL,cAAe;MAAAI,QAAA,EAAC;IAErD;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACRb,YAAY,iBACXH,OAAA;MAAKU,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BX,OAAA;QAAGY,OAAO,EAAEA,CAAA,KAAMJ,kBAAkB,CAAC,UAAU,CAAE;QAAAG,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC9DhB,OAAA;QAAGY,OAAO,EAAEA,CAAA,KAAMJ,kBAAkB,CAAC,UAAU,CAAE;QAAAG,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAC9DhB,OAAA;QAAGY,OAAO,EAAEA,CAAA,KAAMJ,kBAAkB,CAAC,UAAU,CAAE;QAAAG,QAAA,EAAC;MAAQ;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3D,CACN,EACAX,cAAc,iBAAIL,OAAA;MAAAW,QAAA,GAAG,mBAAiB,EAACN,cAAc;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxD,CAAC;AAEV;AAACd,EAAA,CAjCQD,mBAAmB;AAAAgB,EAAA,GAAnBhB,mBAAmB;AAmC5B,eAAeA,mBAAmB;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}