{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Desktop\\\\sem5\\\\Project\\\\New\\\\new\\\\src\\\\components\\\\dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Link, Route, Routes, useNavigate } from \"react-router-dom\";\nimport \"./dashboard.css\";\nimport Achievements from \"./achievements/achievements\";\nimport LogoutButton from \"./logout/logout\";\nimport { useAuth } from \"./AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const {\n    token,\n    email\n  } = useAuth();\n  const [userInfo, setUserInfo] = useState(null);\n  const [currentSemester, setCurrentSemester] = useState(null);\n  const [marksData, setMarksData] = useState([]); // State to store marks data\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Make an API request to fetch user data\n    const fetchUserInfo = async () => {\n      try {\n        if (token && email) {\n          const response = await fetch(`http://localhost:9002/info?email=${email}`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          if (response.status === 200) {\n            const userData = await response.json();\n            setUserInfo(userData);\n\n            // Calculate current semester based on a fixed start date\n            const startDate = new Date(userData.startDate);\n            const currentDate = new Date();\n\n            // Calculate the difference in months\n            const diffMonths = (currentDate.getFullYear() - startDate.getFullYear()) * 12 + (currentDate.getMonth() - startDate.getMonth());\n            const currentSemesterNumber = Math.floor(diffMonths / 5) + 1;\n            setCurrentSemester(currentSemesterNumber);\n\n            // Fetch marks data based on user's current semester\n            fetchMarksData(currentSemesterNumber);\n          } else {\n            console.error('Failed to fetch user information');\n          }\n        }\n      } catch (error) {\n        console.error('Fetch user info error:', error);\n      }\n    };\n    if (token) {\n      fetchUserInfo();\n    }\n  }, [token, email, navigate]);\n\n  // Function to fetch marks data for specific semesters\n  const fetchMarksData = async currentSemesterNumber => {\n    try {\n      // Replace this with your API endpoint and logic to fetch marks data\n      const response = await fetch(`http://localhost:9002/marks?semester=${currentSemesterNumber}`);\n      if (response.status === 200) {\n        const marks = await response.json();\n        setMarksData(marks);\n      } else {\n        console.error('Failed to fetch marks data');\n      }\n    } catch (error) {\n      console.error('Fetch marks data error:', error);\n    }\n  };\n\n  // Rest of your component code, including rendering marksData in the Progress Report component\n  // ...\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"col-md-9 ms-sm-auto col-lg-10 px-md-4\",\n      children: [userInfo ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: userInfo.photo,\n          alt: \"User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", userInfo.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Email: \", userInfo.email]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Student Id: \", userInfo.studentId]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), userInfo.startDate && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Start Date: \", formatStartDate(userInfo.startDate)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this), currentSemester !== null && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Current Semester: \", currentSemester]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading user data...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ProgressReport, {\n        marksData: marksData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"UduvWXQwvmYCdJYLuJmDBJIhyXE=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\n\n// import React, { useState, useEffect } from \"react\";\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// import { Link, Route, Routes, useNavigate } from \"react-router-dom\";\n// import \"./dashboard.css\";\n// import Achievements from \"./achievements/achievements\";\n// import LogoutButton from \"./logout/logout\";\n// import { useAuth } from \"./AuthContext\";\n\n// const Dashboard = () => {\n//   const { token, email } = useAuth();\n//   const [userInfo, setUserInfo] = useState(null);\n//   const [currentSemester, setCurrentSemester] = useState(null);\n//   const navigate = useNavigate();\n\n//   useEffect(() => {\n//     // Make an API request to fetch user data\n//     const fetchUserInfo = async () => {\n//       try {\n//         if (token && email) {\n//           const response = await fetch(`http://localhost:9002/info?email=${email}`, {\n//             headers: {\n//               Authorization: `Bearer ${token}`,\n//             },\n//           });\n//           if (response.status === 200) {\n//             const userData = await response.json();\n//             setUserInfo(userData);\n\n//             // Calculate current semester based on a fixed start date\n//             const startDate = new Date(userData.startDate);\n//             const currentDate = new Date();\n\n//             // Calculate the difference in months\n//             const diffMonths = (currentDate.getFullYear() - startDate.getFullYear()) * 12 + (currentDate.getMonth() - startDate.getMonth());\n//             const currentSemesterNumber = Math.floor(diffMonths / 5) + 1;\n//             setCurrentSemester(currentSemesterNumber);\n\n//             // Navigate to the same route to reload the page\n//             navigate('/dashboard', { replace: true });\n//           } else {\n//             console.error('Failed to fetch user information');\n//           }\n//         }\n//       } catch (error) {\n//         console.error('Fetch user info error:', error);\n//       }\n//     };\n\n//     if (token) {\n//       fetchUserInfo();\n//     }\n//   }, [token, email, navigate]);\n\n//   const formatStartDate = (dateString) => {\n//     const date = new Date(dateString);\n//     return date.toLocaleDateString('en-US');\n//   };\n\n//   return (\n//     <div className=\"container-fluid\">\n//       <div className=\"row\">\n//         <nav id=\"sidebar\" className=\"col-md-3 col-lg-2 d-md-block bg-light sidebar\">\n//           <div className=\"position-sticky\">\n//             <ul className=\"nav flex-column\">\n//               <li className=\"nav-item\">\n//                 <Link to=\"/dashboard/ChatSystem\" className=\"nav-link\">\n//                   Chat System\n//                 </Link>\n//               </li>\n//               <li className=\"nav-item\">\n//                 <Link to=\"/dashboard/achievements\" className=\"nav-link\">\n//                   Track Achievements\n//                 </Link>\n//               </li>\n//               <li className=\"nav-item\">\n//                 <Link to=\"/dashboard/progressreport\" className=\"nav-link\">\n//                   View Progress Report\n//                 </Link>\n//               </li>\n//             </ul>\n//           </div>\n//         </nav>\n\n//         <main className=\"col-md-9 ms-sm-auto col-lg-10 px-md-4\">\n//           <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n//             <h1 className=\"h2\">Dashboard</h1>\n//             <LogoutButton />\n//           </div>\n\n//           {/* Display user data */}\n//           {userInfo ? (\n//             <div>\n//               <img src={userInfo.photo} alt=\"User\" />\n//               <p>Name: {userInfo.name}</p>\n//               <p>Email: {userInfo.email}</p>\n//               <p>Student Id: {userInfo.studentId}</p>\n//               {userInfo.startDate && (\n//                 <p>Start Date: {formatStartDate(userInfo.startDate)}</p>\n//               )}\n//               {currentSemester !== null && (\n//                 <p>Current Semester: {currentSemester}</p>\n//               )}\n//             </div>\n//           ) : (\n//             <p>Loading user data...</p>\n//           )}\n\n//           <Routes>\n//             <Route path=\"/dashboard/achievements\" element={<Achievements />} />\n//           </Routes>\n//         </main>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Link","Route","Routes","useNavigate","Achievements","LogoutButton","useAuth","jsxDEV","_jsxDEV","Dashboard","_s","token","email","userInfo","setUserInfo","currentSemester","setCurrentSemester","marksData","setMarksData","navigate","fetchUserInfo","response","fetch","headers","Authorization","status","userData","json","startDate","Date","currentDate","diffMonths","getFullYear","getMonth","currentSemesterNumber","Math","floor","fetchMarksData","console","error","marks","className","children","src","photo","alt","fileName","_jsxFileName","lineNumber","columnNumber","name","studentId","formatStartDate","ProgressReport","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Desktop/sem5/Project/New/new/src/components/dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Link, Route, Routes, useNavigate } from \"react-router-dom\";\r\nimport \"./dashboard.css\";\r\nimport Achievements from \"./achievements/achievements\";\r\nimport LogoutButton from \"./logout/logout\";\r\nimport { useAuth } from \"./AuthContext\";\r\n\r\nconst Dashboard = () => {\r\n  const { token, email } = useAuth();\r\n  const [userInfo, setUserInfo] = useState(null);\r\n  const [currentSemester, setCurrentSemester] = useState(null);\r\n  const [marksData, setMarksData] = useState([]); // State to store marks data\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Make an API request to fetch user data\r\n    const fetchUserInfo = async () => {\r\n      try {\r\n        if (token && email) {\r\n          const response = await fetch(`http://localhost:9002/info?email=${email}`, {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          });\r\n          if (response.status === 200) {\r\n            const userData = await response.json();\r\n            setUserInfo(userData);\r\n\r\n            // Calculate current semester based on a fixed start date\r\n            const startDate = new Date(userData.startDate);\r\n            const currentDate = new Date();\r\n\r\n            // Calculate the difference in months\r\n            const diffMonths = (currentDate.getFullYear() - startDate.getFullYear()) * 12 + (currentDate.getMonth() - startDate.getMonth());\r\n            const currentSemesterNumber = Math.floor(diffMonths / 5) + 1;\r\n            setCurrentSemester(currentSemesterNumber);\r\n\r\n            // Fetch marks data based on user's current semester\r\n            fetchMarksData(currentSemesterNumber);\r\n          } else {\r\n            console.error('Failed to fetch user information');\r\n          }\r\n        }\r\n      } catch (error) {\r\n        console.error('Fetch user info error:', error);\r\n      }\r\n    };\r\n\r\n    if (token) {\r\n      fetchUserInfo();\r\n    }\r\n  }, [token, email, navigate]);\r\n\r\n  // Function to fetch marks data for specific semesters\r\n  const fetchMarksData = async (currentSemesterNumber) => {\r\n    try {\r\n      // Replace this with your API endpoint and logic to fetch marks data\r\n      const response = await fetch(`http://localhost:9002/marks?semester=${currentSemesterNumber}`);\r\n      if (response.status === 200) {\r\n        const marks = await response.json();\r\n        setMarksData(marks);\r\n      } else {\r\n        console.error('Failed to fetch marks data');\r\n      }\r\n    } catch (error) {\r\n      console.error('Fetch marks data error:', error);\r\n    }\r\n  };\r\n\r\n  // Rest of your component code, including rendering marksData in the Progress Report component\r\n  // ...\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      {/* ... */}\r\n      <main className=\"col-md-9 ms-sm-auto col-lg-10 px-md-4\">\r\n        {/* ... */}\r\n        {/* Display user data */}\r\n        {userInfo ? (\r\n          <div>\r\n            <img src={userInfo.photo} alt=\"User\" />\r\n            <p>Name: {userInfo.name}</p>\r\n            <p>Email: {userInfo.email}</p>\r\n            <p>Student Id: {userInfo.studentId}</p>\r\n            {userInfo.startDate && (\r\n              <p>Start Date: {formatStartDate(userInfo.startDate)}</p>\r\n            )}\r\n            {currentSemester !== null && (\r\n              <p>Current Semester: {currentSemester}</p>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <p>Loading user data...</p>\r\n        )}\r\n\r\n        {/* Render your Progress Report component and pass marksData as a prop */}\r\n        <ProgressReport marksData={marksData} />\r\n      </main>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n// import { Link, Route, Routes, useNavigate } from \"react-router-dom\";\r\n// import \"./dashboard.css\";\r\n// import Achievements from \"./achievements/achievements\";\r\n// import LogoutButton from \"./logout/logout\";\r\n// import { useAuth } from \"./AuthContext\";\r\n\r\n// const Dashboard = () => {\r\n//   const { token, email } = useAuth();\r\n//   const [userInfo, setUserInfo] = useState(null);\r\n//   const [currentSemester, setCurrentSemester] = useState(null);\r\n//   const navigate = useNavigate();\r\n\r\n//   useEffect(() => {\r\n//     // Make an API request to fetch user data\r\n//     const fetchUserInfo = async () => {\r\n//       try {\r\n//         if (token && email) {\r\n//           const response = await fetch(`http://localhost:9002/info?email=${email}`, {\r\n//             headers: {\r\n//               Authorization: `Bearer ${token}`,\r\n//             },\r\n//           });\r\n//           if (response.status === 200) {\r\n//             const userData = await response.json();\r\n//             setUserInfo(userData);\r\n\r\n//             // Calculate current semester based on a fixed start date\r\n//             const startDate = new Date(userData.startDate);\r\n//             const currentDate = new Date();\r\n\r\n//             // Calculate the difference in months\r\n//             const diffMonths = (currentDate.getFullYear() - startDate.getFullYear()) * 12 + (currentDate.getMonth() - startDate.getMonth());\r\n//             const currentSemesterNumber = Math.floor(diffMonths / 5) + 1;\r\n//             setCurrentSemester(currentSemesterNumber);\r\n\r\n//             // Navigate to the same route to reload the page\r\n//             navigate('/dashboard', { replace: true });\r\n//           } else {\r\n//             console.error('Failed to fetch user information');\r\n//           }\r\n//         }\r\n//       } catch (error) {\r\n//         console.error('Fetch user info error:', error);\r\n//       }\r\n//     };\r\n\r\n//     if (token) {\r\n//       fetchUserInfo();\r\n//     }\r\n//   }, [token, email, navigate]);\r\n\r\n//   const formatStartDate = (dateString) => {\r\n//     const date = new Date(dateString);\r\n//     return date.toLocaleDateString('en-US');\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container-fluid\">\r\n//       <div className=\"row\">\r\n//         <nav id=\"sidebar\" className=\"col-md-3 col-lg-2 d-md-block bg-light sidebar\">\r\n//           <div className=\"position-sticky\">\r\n//             <ul className=\"nav flex-column\">\r\n//               <li className=\"nav-item\">\r\n//                 <Link to=\"/dashboard/ChatSystem\" className=\"nav-link\">\r\n//                   Chat System\r\n//                 </Link>\r\n//               </li>\r\n//               <li className=\"nav-item\">\r\n//                 <Link to=\"/dashboard/achievements\" className=\"nav-link\">\r\n//                   Track Achievements\r\n//                 </Link>\r\n//               </li>\r\n//               <li className=\"nav-item\">\r\n//                 <Link to=\"/dashboard/progressreport\" className=\"nav-link\">\r\n//                   View Progress Report\r\n//                 </Link>\r\n//               </li>\r\n//             </ul>\r\n//           </div>\r\n//         </nav>\r\n\r\n//         <main className=\"col-md-9 ms-sm-auto col-lg-10 px-md-4\">\r\n//           <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\r\n//             <h1 className=\"h2\">Dashboard</h1>\r\n//             <LogoutButton />\r\n//           </div>\r\n             \r\n//           {/* Display user data */}\r\n//           {userInfo ? (\r\n//             <div>\r\n//               <img src={userInfo.photo} alt=\"User\" />\r\n//               <p>Name: {userInfo.name}</p>\r\n//               <p>Email: {userInfo.email}</p>\r\n//               <p>Student Id: {userInfo.studentId}</p>\r\n//               {userInfo.startDate && (\r\n//                 <p>Start Date: {formatStartDate(userInfo.startDate)}</p>\r\n//               )}\r\n//               {currentSemester !== null && (\r\n//                 <p>Current Semester: {currentSemester}</p>\r\n//               )}\r\n//             </div>\r\n//           ) : (\r\n//             <p>Loading user data...</p>\r\n//           )}\r\n             \r\n//           <Routes>\r\n//             <Route path=\"/dashboard/achievements\" element={<Achievements />} />\r\n//           </Routes>\r\n//         </main>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Dashboard;\r\n"],"mappings":"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},"metadata":{},"sourceType":"module","externalDependencies":[]}