{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Desktop\\\\sem5\\\\Project\\\\New\\\\new\\\\src\\\\components\\\\adminDashboard.js\",\n  _s = $RefreshSig$();\n// In your AdminDashboard.js\n\nimport React, { useState, useEffect } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Link, Routes, useNavigate } from \"react-router-dom\";\nimport LogoutButton from \"./logout/logout\";\nimport { useAuth } from \"./AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const {\n    token,\n    email\n  } = useAuth();\n  const [adminInfo, setAdminInfo] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedPhoto, setSelectedPhoto] = useState(null);\n  const [uploadingPhoto, setUploadingPhoto] = useState(false);\n  const navigate = useNavigate();\n  const {\n    isAdmin\n  } = useAuth();\n  useEffect(() => {\n    // Fetch admin info as before...\n  }, [token, isAdmin, email, navigate]);\n  const handlePhotoUpload = async e => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('photo', e.target.files[0]);\n    formData.append('email', email);\n    try {\n      setUploadingPhoto(true);\n      const response = await fetch('http://localhost:9002/data/upload', {\n        method: 'POST',\n        body: formData\n      });\n      if (response.status === 201) {\n        // Photo uploaded successfully, you can update the UI or take other actions\n      } else {\n        console.error('Failed to upload photo');\n      }\n    } catch (error) {\n      console.error('Photo upload error:', error);\n    } finally {\n      setUploadingPhoto(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        id: \"sidebar\",\n        className: \"col-md-3 col-lg-2 d-md-block bg-light sidebar\",\n        children: isAdmin && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/jpeg\",\n            onChange: handlePhotoUpload\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), uploadingPhoto && /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Uploading photo...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"oZggnuwO7NBSVQv6hYal+KNJvuo=\", false, function () {\n  return [useAuth, useNavigate, useAuth];\n});\n_c = AdminDashboard;\nexport default AdminDashboard;\n\n// import React, { useState, useEffect } from \"react\";\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// import { Link, Routes, useNavigate } from \"react-router-dom\";\n// import LogoutButton from \"./logout/logout\";\n// import { useAuth } from \"./AuthContext\";\n\n// const AdminDashboard = () => {\n//   const { token, email } = useAuth();\n//   const [adminInfo, setAdminInfo] = useState(null);\n//   const [isLoading, setIsLoading] = useState(true);\n//   const [selectedPhoto, setSelectedPhoto] = useState(null);\n\n//   const navigate = useNavigate();\n\n//   const { isAdmin } = useAuth();\n\n// console.log(\"token:\", token)\n// console.log(\"admin:\",isAdmin)\n// console.log(\"email\",email)\n\n//   useEffect(() => {\n//     console.log(\"Effect started\"); // Add this\n\n//     const fetchAdminInfo = async () => {\n//       try {\n\n//         if (token && isAdmin && email) {\n//           console.log(\"Fetching admin data\"); // Add this\n\n//           const response = await fetch(`http://localhost:9002/data?email=${email}`, {\n//             headers: {\n//               Authorization: `Bearer ${token}`,\n//             },\n//           });\n\n//           if (response.status === 200) {\n\n//             console.log(\"Admin data fetched successfully\");\n\n//             const adminData = await response.json();\n//             setAdminInfo(adminData);\n//             setSelectedPhoto(adminData.photo);\n//           }\n\n//           setIsLoading(false);\n//           console.log(\"Loading completed\"); // Add this\n//         } else {\n//           console.error('Failed to fetch admin information');\n//         }\n//       } catch (error) {\n//         console.error('Fetch admin info error:', error);\n//       }\n//     };\n\n//     if (token && isAdmin && email) {\n//       console.log(\"Starting fetchAdminInfo\"); // Add this\n//       fetchAdminInfo();\n//     }\n//   }, [token, isAdmin, email, navigate]);\n\n//   return (\n//     <div className=\"container-fluid\">\n//       <div className=\"row\">\n//         <nav id=\"sidebar\" className=\"col-md-3 col-lg-2 d-md-block bg-light sidebar\">\n//   <div className=\"position-sticky\">\n//     <ul className=\"nav flex-column\">\n//       <li className=\"nav-item\">\n//         <Link to=\"/admindashboard/ChatSystem\" className=\"nav-link\">\n//           Chat System\n//         </Link>\n//       </li>\n//       <li className=\"nav-item\">\n//         <Link to=\"/admindashboard/form\" className=\"nav-link\">\n//           Form\n//         </Link>\n//       </li>\n//     </ul>\n//   </div>\n// </nav>\n\n// {/* Main content */}\n// <main className=\"col-md-9 ms-sm-auto col-lg-10 px-md-4\">\n//   <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n//     <h1 className=\"h2\">Admin Dashboard</h1>\n//     <LogoutButton />\n//   </div>\n\n//           {isLoading ? (\n//             <p>Loading admin data...</p>\n//           ) : (\n//             /* Display admin data when it's available */\n//             <div>\n//               <div>\n//                 {selectedPhoto !== null ? (\n//                   <div>\n//                     <img src={`data:image/jpeg;base64,${selectedPhoto}`}\n//                       alt=\"User Photo\"\n//                       style={{ maxWidth: '200px', borderRadius: '50%' }}\n//                     />\n//                   </div>\n//                 ) : (\n//                   <div>\n//                     {/* You can add an input for changing the photo here if needed */}\n//                   </div>\n//                 )}\n//               </div>\n//               <div className=\"mt-4\">\n//                 <p><strong>Name:</strong> {adminInfo.name}</p>\n//                 <p><strong>Email:</strong> {adminInfo.email}</p>\n//                 <p><strong>Admin Id:</strong> {adminInfo.adminId}</p>\n//                 <p><strong>Faculty:</strong> {adminInfo.faculty}</p>\n//               </div>\n//             </div>\n//           )}\n\n//           <Routes>\n//             {/* Define your admin-specific routes here */}\n//           </Routes>\n//         </main>\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","Link","Routes","useNavigate","LogoutButton","useAuth","jsxDEV","_jsxDEV","AdminDashboard","_s","token","email","adminInfo","setAdminInfo","isLoading","setIsLoading","selectedPhoto","setSelectedPhoto","uploadingPhoto","setUploadingPhoto","navigate","isAdmin","handlePhotoUpload","e","preventDefault","formData","FormData","append","target","files","response","fetch","method","body","status","console","error","className","children","id","type","accept","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Desktop/sem5/Project/New/new/src/components/adminDashboard.js"],"sourcesContent":["// In your AdminDashboard.js\r\n\r\nimport React, { useState, useEffect } from \"react\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Link, Routes, useNavigate } from \"react-router-dom\";\r\nimport LogoutButton from \"./logout/logout\";\r\nimport { useAuth } from \"./AuthContext\";\r\n\r\nconst AdminDashboard = () => {\r\n  const { token, email } = useAuth();\r\n  const [adminInfo, setAdminInfo] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [selectedPhoto, setSelectedPhoto] = useState(null);\r\n  const [uploadingPhoto, setUploadingPhoto] = useState(false);\r\n\r\n  const navigate = useNavigate();\r\n  const { isAdmin } = useAuth();\r\n\r\n  useEffect(() => {\r\n    // Fetch admin info as before...\r\n  }, [token, isAdmin, email, navigate]);\r\n\r\n  const handlePhotoUpload = async (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData();\r\n    formData.append('photo', e.target.files[0]);\r\n    formData.append('email', email);\r\n\r\n    try {\r\n      setUploadingPhoto(true);\r\n      const response = await fetch('http://localhost:9002/data/upload', {\r\n        method: 'POST',\r\n        body: formData,\r\n      });\r\n\r\n      if (response.status === 201) {\r\n        // Photo uploaded successfully, you can update the UI or take other actions\r\n      } else {\r\n        console.error('Failed to upload photo');\r\n      }\r\n    } catch (error) {\r\n      console.error('Photo upload error:', error);\r\n    } finally {\r\n      setUploadingPhoto(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <nav id=\"sidebar\" className=\"col-md-3 col-lg-2 d-md-block bg-light sidebar\">\r\n        \r\n\r\n          {isAdmin && (\r\n            <div>\r\n              <input type=\"file\" accept=\"image/jpeg\" onChange={handlePhotoUpload} />\r\n              {uploadingPhoto && <p>Uploading photo...</p>}\r\n            </div>\r\n          )}\r\n        </nav>\r\n\r\n        {/* ... Rest of your component ... */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminDashboard;\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n// import { Link, Routes, useNavigate } from \"react-router-dom\";\r\n// import LogoutButton from \"./logout/logout\";\r\n// import { useAuth } from \"./AuthContext\";\r\n\r\n// const AdminDashboard = () => {\r\n//   const { token, email } = useAuth();\r\n//   const [adminInfo, setAdminInfo] = useState(null);\r\n//   const [isLoading, setIsLoading] = useState(true);\r\n//   const [selectedPhoto, setSelectedPhoto] = useState(null);\r\n\r\n//   const navigate = useNavigate();\r\n\r\n//   const { isAdmin } = useAuth();\r\n\r\n// console.log(\"token:\", token)\r\n// console.log(\"admin:\",isAdmin)\r\n// console.log(\"email\",email)\r\n\r\n   \r\n//   useEffect(() => {\r\n//     console.log(\"Effect started\"); // Add this\r\n\r\n//     const fetchAdminInfo = async () => {\r\n//       try {\r\n       \r\n\r\n//         if (token && isAdmin && email) {\r\n//           console.log(\"Fetching admin data\"); // Add this\r\n\r\n//           const response = await fetch(`http://localhost:9002/data?email=${email}`, {\r\n//             headers: {\r\n//               Authorization: `Bearer ${token}`,\r\n//             },\r\n//           });\r\n\r\n//           if (response.status === 200) {\r\n\r\n//             console.log(\"Admin data fetched successfully\");\r\n\r\n//             const adminData = await response.json();\r\n//             setAdminInfo(adminData);\r\n//             setSelectedPhoto(adminData.photo);\r\n//           }\r\n\r\n//           setIsLoading(false);\r\n//           console.log(\"Loading completed\"); // Add this\r\n//         } else {\r\n//           console.error('Failed to fetch admin information');\r\n//         }\r\n//       } catch (error) {\r\n//         console.error('Fetch admin info error:', error);\r\n//       }\r\n//     };\r\n\r\n//     if (token && isAdmin && email) {\r\n//       console.log(\"Starting fetchAdminInfo\"); // Add this\r\n//       fetchAdminInfo();\r\n//     }\r\n//   }, [token, isAdmin, email, navigate]);\r\n\r\n//   return (\r\n//     <div className=\"container-fluid\">\r\n//       <div className=\"row\">\r\n//         <nav id=\"sidebar\" className=\"col-md-3 col-lg-2 d-md-block bg-light sidebar\">\r\n        //   <div className=\"position-sticky\">\r\n        //     <ul className=\"nav flex-column\">\r\n        //       <li className=\"nav-item\">\r\n        //         <Link to=\"/admindashboard/ChatSystem\" className=\"nav-link\">\r\n        //           Chat System\r\n        //         </Link>\r\n        //       </li>\r\n        //       <li className=\"nav-item\">\r\n        //         <Link to=\"/admindashboard/form\" className=\"nav-link\">\r\n        //           Form\r\n        //         </Link>\r\n        //       </li>\r\n        //     </ul>\r\n        //   </div>\r\n        // </nav>\r\n\r\n        // {/* Main content */}\r\n        // <main className=\"col-md-9 ms-sm-auto col-lg-10 px-md-4\">\r\n        //   <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\r\n        //     <h1 className=\"h2\">Admin Dashboard</h1>\r\n        //     <LogoutButton />\r\n        //   </div>\r\n\r\n//           {isLoading ? (\r\n//             <p>Loading admin data...</p>\r\n//           ) : (\r\n//             /* Display admin data when it's available */\r\n//             <div>\r\n//               <div>\r\n//                 {selectedPhoto !== null ? (\r\n//                   <div>\r\n//                     <img src={`data:image/jpeg;base64,${selectedPhoto}`}\r\n//                       alt=\"User Photo\"\r\n//                       style={{ maxWidth: '200px', borderRadius: '50%' }}\r\n//                     />\r\n//                   </div>\r\n//                 ) : (\r\n//                   <div>\r\n//                     {/* You can add an input for changing the photo here if needed */}\r\n//                   </div>\r\n//                 )}\r\n//               </div>\r\n//               <div className=\"mt-4\">\r\n//                 <p><strong>Name:</strong> {adminInfo.name}</p>\r\n//                 <p><strong>Email:</strong> {adminInfo.email}</p>\r\n//                 <p><strong>Admin Id:</strong> {adminInfo.adminId}</p>\r\n//                 <p><strong>Faculty:</strong> {adminInfo.faculty}</p>\r\n//               </div>\r\n//             </div>\r\n//           )}\r\n\r\n//           <Routes>\r\n//             {/* Define your admin-specific routes here */}\r\n//           </Routes>\r\n//         </main>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default AdminDashboard;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}