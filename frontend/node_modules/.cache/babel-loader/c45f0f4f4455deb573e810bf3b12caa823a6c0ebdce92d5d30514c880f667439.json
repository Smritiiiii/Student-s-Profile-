{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Desktop\\\\sem5\\\\Project\\\\New\\\\new\\\\src\\\\components\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  // Attempt to retrieve the token from localStorage when the app starts\n  const initialToken = localStorage.getItem('token') || null;\n  const [token, setToken] = useState(initialToken);\n\n  // Store the token in localStorage whenever it changes\n  useEffect(() => {\n    if (token) {\n      localStorage.setItem('token', token);\n      console.log;\n    } else {\n      localStorage.removeItem('token');\n    }\n  }, [token]);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token,\n      setToken\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"w4PGjzwU+znkNWWv/cmJxDZqQPE=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","initialToken","localStorage","getItem","token","setToken","setItem","console","log","removeItem","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Desktop/sem5/Project/New/new/src/components/AuthContext.js"],"sourcesContent":["import { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  // Attempt to retrieve the token from localStorage when the app starts\r\n  const initialToken = localStorage.getItem('token') || null;\r\n  const [token, setToken] = useState(initialToken);\r\n\r\n  // Store the token in localStorage whenever it changes\r\n  useEffect(() => {\r\n    if (token) {\r\n      localStorage.setItem('token', token);\r\n\r\n      console.log\r\n    } else {\r\n      localStorage.removeItem('token');\r\n    }\r\n  }, [token]);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ token, setToken }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => {\r\n  return useContext(AuthContext);\r\n};\r\n"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvE,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C;EACA,MAAMC,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI;EAC1D,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAACQ,YAAY,CAAC;;EAEhD;EACAP,SAAS,CAAC,MAAM;IACd,IAAIU,KAAK,EAAE;MACTF,YAAY,CAACI,OAAO,CAAC,OAAO,EAAEF,KAAK,CAAC;MAEpCG,OAAO,CAACC,GAAG;IACb,CAAC,MAAM;MACLN,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;IAClC;EACF,CAAC,EAAE,CAACL,KAAK,CAAC,CAAC;EAEX,oBACER,OAAA,CAACC,WAAW,CAACa,QAAQ;IAACC,KAAK,EAAE;MAAEP,KAAK;MAAEC;IAAS,CAAE;IAAAN,QAAA,EAC9CA;EAAQ;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACf,EAAA,CArBWF,YAAY;AAAAkB,EAAA,GAAZlB,YAAY;AAuBzB,OAAO,MAAMmB,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAC3B,OAAO1B,UAAU,CAACK,WAAW,CAAC;AAChC,CAAC;AAACqB,GAAA,CAFWD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}