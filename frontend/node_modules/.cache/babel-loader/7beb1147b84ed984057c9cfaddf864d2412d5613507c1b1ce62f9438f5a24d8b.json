{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dell\\\\OneDrive\\\\Desktop\\\\sem5\\\\Project\\\\New\\\\new\\\\src\\\\components\\\\adminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Link, Routes, Route, useNavigate } from \"react-router-dom\";\nimport LogoutButton from \"./logout/logout\";\nimport { useAuth } from \"./AuthContext\";\nimport StudentForm from \"./studentForm\";\nimport ChatSystem from \"./chatsystem/script\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst AdminDashboard = () => {\n  _s();\n  const {\n    token,\n    email\n  } = useAuth();\n  const [adminInfo, setAdminInfo] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedPhoto, setSelectedPhoto] = useState(null);\n  const navigate = useNavigate();\n  const {\n    isAdmin\n  } = useAuth();\n  useEffect(() => {\n    const fetchAdminInfo = async () => {\n      try {\n        if (token && isAdmin && email) {\n          const response = await fetch(`http://localhost:9002/data?email=${email}`, {\n            headers: {\n              Authorization: `Bearer ${token}`\n            }\n          });\n          if (response.status === 200) {\n            const adminData = await response.json();\n            setAdminInfo(adminData);\n            setSelectedPhoto(adminData.photo);\n          }\n          setIsLoading(false);\n        } else {\n          console.error('Failed to fetch admin information');\n        }\n      } catch (error) {\n        console.error('Fetch admin info error:', error);\n      }\n    };\n    if (token && isAdmin && email) {\n      fetchAdminInfo();\n    }\n  }, [token, isAdmin, email, navigate]);\n  const saveStudentInfo = async studentData => {\n    try {\n      const response = await fetch('http://localhost:9002/data/saveStudentInfo', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify(studentData)\n      });\n      if (response.status === 200) {\n        console.log('Student information saved successfully');\n      } else {\n        console.error('Failed to save student information');\n      }\n    } catch (error) {\n      console.error('Save student info error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        id: \"sidebar\",\n        className: \"col-md-3 col-lg-2 d-md-block bg-light sidebar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"position-sticky\",\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"nav flex-column\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/admindashboard/ChatSystem\",\n                className: \"nav-link\",\n                children: \"Chat System\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                to: \"/admindashboard/form\",\n                className: \"nav-link\",\n                children: \"Form\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n        className: \"col-md-9 ms-sm-auto col-lg-10 px-md-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"h2\",\n            children: \"Admin Dashboard\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(LogoutButton, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), isLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Loading admin data...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [selectedPhoto !== null ? /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `data:image/jpeg;base64,${selectedPhoto}`,\n                alt: \"Admin\",\n                style: {\n                  maxWidth: '200px',\n                  borderRadius: '50%'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-4\",\n              children: adminInfo ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Name:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 26\n                  }, this), \" \", adminInfo.name]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Email:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 26\n                  }, this), \" \", adminInfo.email]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Admin Id:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 26\n                  }, this), \" \", adminInfo.adminId]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                    children: \"Faculty:\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 26\n                  }, this), \" \", adminInfo.faculty]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Admin information not available.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, this), \"Render the StudentForm component inside the \\\"Form\\\" route\", /*#__PURE__*/_jsxDEV(Routes, {\n              children: [/*#__PURE__*/_jsxDEV(Route, {\n                path: \"/admindashboard/ChatSystem\",\n                element: /*#__PURE__*/_jsxDEV(ChatSystem, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 69\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/admindashboard/form\",\n                element: /*#__PURE__*/_jsxDEV(StudentForm, {\n                  onSave: saveStudentInfo\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 63\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminDashboard, \"SGUGhTJfJUqyY3Lg5LjQPxjDeu8=\", false, function () {\n  return [useAuth, useNavigate, useAuth];\n});\n_c = AdminDashboard;\nexport default AdminDashboard;\n\n// import React, { useState, useEffect } from \"react\";\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// import { Link, Routes, Route, useNavigate } from \"react-router-dom\";\n// import LogoutButton from \"./logout/logout\";\n// import { useAuth } from \"./AuthContext\";\n// import StudentForm from \"./studentForm\";\n// import ChatSystem from \"./chatsystem/script\";\n\n// const AdminDashboard = () => {\n//   const { token, email } = useAuth();\n//   const [adminInfo, setAdminInfo] = useState(null);\n//   const [isLoading, setIsLoading] = useState(true);\n//   const [selectedPhoto, setSelectedPhoto] = useState(null);\n\n//   const navigate = useNavigate();\n\n//   const { isAdmin } = useAuth();\n\n//   useEffect(() => {\n//     const fetchAdminInfo = async () => {\n//       try {\n//         if (token && isAdmin && email) {\n//           const response = await fetch(`http://localhost:9002/data?email=${email}`, {\n//             headers: {\n//               Authorization: `Bearer ${token}`,\n//             },\n//           });\n\n//           if (response.status === 200) {\n//             const adminData = await response.json();\n//             setAdminInfo(adminData);\n//             setSelectedPhoto(adminData.photo);\n//           }\n\n//           setIsLoading(false);\n//         } else {\n//           console.error('Failed to fetch admin information');\n//         }\n//       } catch (error) {\n//         console.error('Fetch admin info error:', error);\n//       }\n//     };\n\n//     if (token && isAdmin && email) {\n//       fetchAdminInfo();\n//     }\n//   }, [token, isAdmin, email, navigate]);\n\n//   const saveStudentInfo = async (studentData) => {\n//     try {\n//       const response = await fetch('http://localhost:9002/data/saveStudentInfo', {\n//         method: 'POST',\n//         headers: {\n//           'Content-Type': 'application/json',\n//           Authorization: `Bearer ${token}`,\n//         },\n//         body: JSON.stringify(studentData),\n//       });\n//       if (response.status === 200) {\n//         console.log('Student information saved successfully');\n//       } else {\n//         console.error('Failed to save student information');\n//       }\n//     } catch (error) {\n//       console.error('Save student info error:', error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"container-fluid\">\n//       <div className=\"row\">\n//         <nav id=\"sidebar\" className=\"col-md-3 col-lg-2 d-md-block bg-light sidebar\">\n//           <div className=\"position-sticky\">\n//             <ul className=\"nav flex-column\">\n//               <li className=\"nav-item\">\n//                 <Link to=\"/admindashboard/ChatSystem\" className=\"nav-link\">\n//                   Chat System\n//                 </Link>\n//               </li>\n//               <li className=\"nav-item\">\n//                 <Link to=\"/admindashboard/form\" className=\"nav-link\">\n//                   Form\n//                 </Link>\n//               </li>\n//             </ul>\n//           </div>\n//         </nav>\n\n//         <main className=\"col-md-9 ms-sm-auto col-lg-10 px-md-4\">\n//           <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\n//             <h1 className=\"h2\">Admin Dashboard</h1>\n//             <LogoutButton />\n//           </div>\n\n//           {isLoading ? (\n//             <p>Loading admin data...</p>\n//           ) : (\n//             <div>\n//               <div>\n//                 {selectedPhoto !== null ? (\n//                   <div>\n//                     <img\n//                       src={`data:image/jpeg;base64,${selectedPhoto}`}\n//                       alt=\"Admin\"\n//                       style={{ maxWidth: '200px', borderRadius: '50%' }}\n//                     />\n//                   </div>\n//                 ) : (\n//                   <div>\n//                     {/* You can add an input for changing the photo here if needed */}\n//                   </div>\n//                 )}\n\n//                 <div className=\"mt-4\">\n//                   {adminInfo ? (\n//                     <>\n//                       <p><strong>Name:</strong> {adminInfo.name}</p>\n//                       <p><strong>Email:</strong> {adminInfo.email}</p>\n//                       <p><strong>Admin Id:</strong> {adminInfo.adminId}</p>\n//                       <p><strong>Faculty:</strong> {adminInfo.faculty}</p>\n//                     </>\n//                   ) : (\n//                     <p>Admin information not available.</p>\n//                   )}\n//                 </div>\n//                 <div>\n//                   <StudentForm onSave={saveStudentInfo} />\n//                 </div>\n//               </div>\n//               </div>\n//             )}\n\n//             <Routes>\n//               <Route path=\"/admindashboard/ChatSystem\" element={<ChatSystem />} />\n//               <Route path=\"/admindashboard/form\" element={<StudentForm />} />\n//             </Routes>\n//           </main>\n//         </div>\n//       </div>\n//     );\n//   }\n\n//   export default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useState","useEffect","Link","Routes","Route","useNavigate","LogoutButton","useAuth","StudentForm","ChatSystem","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminDashboard","_s","token","email","adminInfo","setAdminInfo","isLoading","setIsLoading","selectedPhoto","setSelectedPhoto","navigate","isAdmin","fetchAdminInfo","response","fetch","headers","Authorization","status","adminData","json","photo","console","error","saveStudentInfo","studentData","method","body","JSON","stringify","log","className","children","id","to","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","style","maxWidth","borderRadius","name","adminId","faculty","path","element","onSave","_c","$RefreshReg$"],"sources":["C:/Users/Dell/OneDrive/Desktop/sem5/Project/New/new/src/components/adminDashboard.js"],"sourcesContent":["\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { Link, Routes, Route, useNavigate } from \"react-router-dom\";\r\nimport LogoutButton from \"./logout/logout\";\r\nimport { useAuth } from \"./AuthContext\";\r\nimport StudentForm from \"./studentForm\" ;\r\nimport ChatSystem from \"./chatsystem/script\";\r\n\r\nconst AdminDashboard = () => {\r\n  const { token, email } = useAuth();\r\n  const [adminInfo, setAdminInfo] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [selectedPhoto, setSelectedPhoto] = useState(null);\r\n\r\n  const navigate = useNavigate();\r\n  const { isAdmin } = useAuth();\r\n\r\n  useEffect(() => {\r\n    const fetchAdminInfo = async () => {\r\n      try {\r\n        if (token && isAdmin && email) {\r\n          const response = await fetch(`http://localhost:9002/data?email=${email}`, {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          });\r\n\r\n          if (response.status === 200) {\r\n            const adminData = await response.json();\r\n            setAdminInfo(adminData);\r\n            setSelectedPhoto(adminData.photo);\r\n          }\r\n\r\n          setIsLoading(false);\r\n        } else {\r\n          console.error('Failed to fetch admin information');\r\n        }\r\n      } catch (error) {\r\n        console.error('Fetch admin info error:', error);\r\n      }\r\n    };\r\n\r\n    if (token && isAdmin && email) {\r\n      fetchAdminInfo();\r\n    }\r\n  }, [token, isAdmin, email, navigate]);\r\n\r\n  const saveStudentInfo = async (studentData) => {\r\n    try {\r\n      const response = await fetch('http://localhost:9002/data/saveStudentInfo', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n        body: JSON.stringify(studentData),\r\n      });\r\n      if (response.status === 200) {\r\n        console.log('Student information saved successfully');\r\n      } else {\r\n        console.error('Failed to save student information');\r\n      }\r\n    } catch (error) {\r\n      console.error('Save student info error:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container-fluid\">\r\n      <div className=\"row\">\r\n        <nav id=\"sidebar\" className=\"col-md-3 col-lg-2 d-md-block bg-light sidebar\">\r\n          <div className=\"position-sticky\">\r\n            <ul className=\"nav flex-column\">\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/admindashboard/ChatSystem\" className=\"nav-link\">\r\n                  Chat System\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link to=\"/admindashboard/form\" className=\"nav-link\">\r\n                  Form\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </nav>\r\n\r\n        <main className=\"col-md-9 ms-sm-auto col-lg-10 px-md-4\">\r\n          <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\r\n            <h1 className=\"h2\">Admin Dashboard</h1>\r\n            <LogoutButton />\r\n          </div>\r\n\r\n          {isLoading ? (\r\n            <p>Loading admin data...</p>\r\n          ) : (\r\n            <div>\r\n              <div>\r\n                {selectedPhoto !== null ? (\r\n                  <div>\r\n                    <img\r\n                      src={`data:image/jpeg;base64,${selectedPhoto}`}\r\n                      alt=\"Admin\"\r\n                      style={{ maxWidth: '200px', borderRadius: '50%' }}\r\n                    />\r\n                  </div>\r\n                ) : (\r\n                  <div>\r\n                    {/* You can add an input for changing the photo here if needed */}\r\n                  </div>\r\n                )}\r\n\r\n                <div className=\"mt-4\">\r\n                  {adminInfo ? (\r\n                    <>\r\n                      <p><strong>Name:</strong> {adminInfo.name}</p>\r\n                      <p><strong>Email:</strong> {adminInfo.email}</p>\r\n                      <p><strong>Admin Id:</strong> {adminInfo.adminId}</p>\r\n                      <p><strong>Faculty:</strong> {adminInfo.faculty}</p>\r\n                    </>\r\n                  ) : (\r\n                    <p>Admin information not available.</p>\r\n                  )}\r\n                </div>\r\n                Render the StudentForm component inside the \"Form\" route\r\n                <Routes>\r\n                  <Route path=\"/admindashboard/ChatSystem\" element={<ChatSystem />} />\r\n                  <Route path=\"/admindashboard/form\" element={<StudentForm onSave={saveStudentInfo} />} />\r\n                </Routes>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </main>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;\r\n\r\n\r\n// import React, { useState, useEffect } from \"react\";\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n// import { Link, Routes, Route, useNavigate } from \"react-router-dom\";\r\n// import LogoutButton from \"./logout/logout\";\r\n// import { useAuth } from \"./AuthContext\";\r\n// import StudentForm from \"./studentForm\";\r\n// import ChatSystem from \"./chatsystem/script\";\r\n\r\n// const AdminDashboard = () => {\r\n//   const { token, email } = useAuth();\r\n//   const [adminInfo, setAdminInfo] = useState(null);\r\n//   const [isLoading, setIsLoading] = useState(true);\r\n//   const [selectedPhoto, setSelectedPhoto] = useState(null);\r\n \r\n\r\n//   const navigate = useNavigate();\r\n\r\n//   const { isAdmin } = useAuth();\r\n\r\n//   useEffect(() => {\r\n//     const fetchAdminInfo = async () => {\r\n//       try {\r\n//         if (token && isAdmin && email) {\r\n//           const response = await fetch(`http://localhost:9002/data?email=${email}`, {\r\n//             headers: {\r\n//               Authorization: `Bearer ${token}`,\r\n//             },\r\n//           });\r\n\r\n//           if (response.status === 200) {\r\n//             const adminData = await response.json();\r\n//             setAdminInfo(adminData);\r\n//             setSelectedPhoto(adminData.photo);\r\n//           }\r\n\r\n//           setIsLoading(false);\r\n//         } else {\r\n//           console.error('Failed to fetch admin information');\r\n//         }\r\n//       } catch (error) {\r\n//         console.error('Fetch admin info error:', error);\r\n//       }\r\n//     };\r\n\r\n//     if (token && isAdmin && email) {\r\n//       fetchAdminInfo();\r\n//     }\r\n//   }, [token, isAdmin, email, navigate]);\r\n\r\n//   const saveStudentInfo = async (studentData) => {\r\n//     try {\r\n//       const response = await fetch('http://localhost:9002/data/saveStudentInfo', {\r\n//         method: 'POST',\r\n//         headers: {\r\n//           'Content-Type': 'application/json',\r\n//           Authorization: `Bearer ${token}`,\r\n//         },\r\n//         body: JSON.stringify(studentData),\r\n//       });\r\n//       if (response.status === 200) {\r\n//         console.log('Student information saved successfully');\r\n//       } else {\r\n//         console.error('Failed to save student information');\r\n//       }\r\n//     } catch (error) {\r\n//       console.error('Save student info error:', error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container-fluid\">\r\n//       <div className=\"row\">\r\n//         <nav id=\"sidebar\" className=\"col-md-3 col-lg-2 d-md-block bg-light sidebar\">\r\n//           <div className=\"position-sticky\">\r\n//             <ul className=\"nav flex-column\">\r\n//               <li className=\"nav-item\">\r\n//                 <Link to=\"/admindashboard/ChatSystem\" className=\"nav-link\">\r\n//                   Chat System\r\n//                 </Link>\r\n//               </li>\r\n//               <li className=\"nav-item\">\r\n//                 <Link to=\"/admindashboard/form\" className=\"nav-link\">\r\n//                   Form\r\n//                 </Link>\r\n//               </li>\r\n//             </ul>\r\n//           </div>\r\n//         </nav>\r\n\r\n//         <main className=\"col-md-9 ms-sm-auto col-lg-10 px-md-4\">\r\n//           <div className=\"d-flex justify-content-between flex-wrap flex-md-nowrap align-items-center pt-3 pb-2 mb-3 border-bottom\">\r\n//             <h1 className=\"h2\">Admin Dashboard</h1>\r\n//             <LogoutButton />\r\n//           </div>\r\n\r\n//           {isLoading ? (\r\n//             <p>Loading admin data...</p>\r\n//           ) : (\r\n//             <div>\r\n//               <div>\r\n//                 {selectedPhoto !== null ? (\r\n//                   <div>\r\n//                     <img\r\n//                       src={`data:image/jpeg;base64,${selectedPhoto}`}\r\n//                       alt=\"Admin\"\r\n//                       style={{ maxWidth: '200px', borderRadius: '50%' }}\r\n//                     />\r\n//                   </div>\r\n//                 ) : (\r\n//                   <div>\r\n//                     {/* You can add an input for changing the photo here if needed */}\r\n//                   </div>\r\n//                 )}\r\n\r\n//                 <div className=\"mt-4\">\r\n//                   {adminInfo ? (\r\n//                     <>\r\n//                       <p><strong>Name:</strong> {adminInfo.name}</p>\r\n//                       <p><strong>Email:</strong> {adminInfo.email}</p>\r\n//                       <p><strong>Admin Id:</strong> {adminInfo.adminId}</p>\r\n//                       <p><strong>Faculty:</strong> {adminInfo.faculty}</p>\r\n//                     </>\r\n//                   ) : (\r\n//                     <p>Admin information not available.</p>\r\n//                   )}\r\n//                 </div>\r\n//                 <div>\r\n//                   <StudentForm onSave={saveStudentInfo} />\r\n//                 </div>\r\n//               </div>\r\n//               </div>\r\n//             )}\r\n        \r\n//             <Routes>\r\n//               <Route path=\"/admindashboard/ChatSystem\" element={<ChatSystem />} />\r\n//               <Route path=\"/admindashboard/form\" element={<StudentForm />} />\r\n//             </Routes>\r\n//           </main>\r\n//         </div>\r\n//       </div>\r\n//     );\r\n//   }\r\n\r\n//   export default AdminDashboard;\r\n\r\n"],"mappings":"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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}